{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nlet ProjectComponent = class ProjectComponent {\n  constructor(projectService) {\n    this.projectService = projectService;\n    this.projects = new MatTableDataSource([]);\n    this.displayedColumns = ['id', 'name', 'description', 'action'];\n  }\n  ngOnInit() {\n    this.getProjects();\n    this.projects.sort = this.sort;\n  }\n  getProjects() {\n    this.projects.data = this.projectService.getProjects();\n  }\n  addProject(name, description) {\n    name = name.trim();\n    description = description.trim();\n    if (!name || !description) {\n      return;\n    }\n    this.projectService.addProject(name, description);\n    this.getProjects();\n  }\n  deleteProject(project) {\n    this.projectService.deleteProject(project);\n    this.getProjects();\n  }\n  editProject(project) {\n    this.editedProject = {\n      ...project\n    };\n  }\n  cancelEditing() {\n    this.editedProject = undefined;\n  }\n  saveChanges() {\n    if (this.editedProject) {\n      this.projectService.updateProject(this.editedProject.id, this.editedProject.name, this.editedProject.description);\n      this.editedProject = undefined;\n      this.getProjects();\n    }\n  }\n  applyFilter(event) {\n    const filterValue = event.target.value;\n    this.projects.filter = filterValue.trim().toLowerCase();\n  }\n};\n__decorate([ViewChild(MatSort)], ProjectComponent.prototype, \"sort\", void 0);\nProjectComponent = __decorate([Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})], ProjectComponent);\nexport { ProjectComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,SAAS,QAAQ,eAAe;AACpD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,kBAAkB,QAAQ,yBAAyB;AASrD,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAM3BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IALlC,aAAQ,GAAgC,IAAIH,kBAAkB,CAAC,EAAE,CAAC;IAElE,qBAAgB,GAAa,CAAC,IAAI,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,CAAC;EAGf;EAErDI,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;IAClB,IAAI,CAACC,QAAQ,CAACC,IAAI,GAAG,IAAI,CAACA,IAAI;EAChC;EAEAF,WAAW;IACT,IAAI,CAACC,QAAQ,CAACE,IAAI,GAAG,IAAI,CAACL,cAAc,CAACE,WAAW,EAAE;EACxD;EAEAI,UAAU,CAACC,IAAY,EAAEC,WAAmB;IAC1CD,IAAI,GAAGA,IAAI,CAACE,IAAI,EAAE;IAClBD,WAAW,GAAGA,WAAW,CAACC,IAAI,EAAE;IAChC,IAAI,CAACF,IAAI,IAAI,CAACC,WAAW,EAAE;MACzB;;IAEF,IAAI,CAACR,cAAc,CAACM,UAAU,CAACC,IAAI,EAAEC,WAAW,CAAC;IACjD,IAAI,CAACN,WAAW,EAAE;EACpB;EAEAQ,aAAa,CAACC,OAAgB;IAC5B,IAAI,CAACX,cAAc,CAACU,aAAa,CAACC,OAAO,CAAC;IAC1C,IAAI,CAACT,WAAW,EAAE;EACpB;EAEAU,WAAW,CAACD,OAAgB;IAC1B,IAAI,CAACE,aAAa,GAAG;MAAE,GAAGF;IAAO,CAAE;EACrC;EAEAG,aAAa;IACX,IAAI,CAACD,aAAa,GAAGE,SAAS;EAChC;EAEAC,WAAW;IACT,IAAI,IAAI,CAACH,aAAa,EAAE;MACtB,IAAI,CAACb,cAAc,CAACiB,aAAa,CAAC,IAAI,CAACJ,aAAa,CAACK,EAAE,EAAE,IAAI,CAACL,aAAa,CAACN,IAAI,EAAE,IAAI,CAACM,aAAa,CAACL,WAAW,CAAC;MACjH,IAAI,CAACK,aAAa,GAAGE,SAAS;MAC9B,IAAI,CAACb,WAAW,EAAE;;EAEtB;EAEAiB,WAAW,CAACC,KAAY;IACtB,MAAMC,WAAW,GAAID,KAAK,CAACE,MAA2B,CAACC,KAAK;IAC5D,IAAI,CAACpB,QAAQ,CAACqB,MAAM,GAAGH,WAAW,CAACZ,IAAI,EAAE,CAACgB,WAAW,EAAE;EACzD;CACD;AAhDqBC,YAAnB/B,SAAS,CAACC,OAAO,CAAC,8CAAgB;AAJxBE,gBAAgB,eAL5BJ,SAAS,CAAC;EACTiC,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,GACW/B,gBAAgB,CAoD5B;SApDYA,gBAAgB","names":["Component","ViewChild","MatSort","MatTableDataSource","ProjectComponent","constructor","projectService","ngOnInit","getProjects","projects","sort","data","addProject","name","description","trim","deleteProject","project","editProject","editedProject","cancelEditing","undefined","saveChanges","updateProject","id","applyFilter","event","filterValue","target","value","filter","toLowerCase","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/denisdalipi/Downloads/angular-project/src/app/project/project.component.ts"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Project } from '../model/project';\nimport { ProjectService } from '../project.service';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})\nexport class ProjectComponent {\n  projects: MatTableDataSource<Project> = new MatTableDataSource([]);\n  editedProject?: Project;\n  displayedColumns: string[] = ['id', 'name', 'description', 'action'];\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(private projectService: ProjectService) {}\n\n  ngOnInit() {\n    this.getProjects();\n    this.projects.sort = this.sort;\n  }\n\n  getProjects(): void {\n    this.projects.data = this.projectService.getProjects();\n  }\n\n  addProject(name: string, description: string): void {\n    name = name.trim();\n    description = description.trim();\n    if (!name || !description) {\n      return;\n    }\n    this.projectService.addProject(name, description);\n    this.getProjects();\n  }\n\n  deleteProject(project: Project): void {\n    this.projectService.deleteProject(project);\n    this.getProjects();\n  }\n\n  editProject(project: Project): void {\n    this.editedProject = { ...project };\n  }\n\n  cancelEditing(): void {\n    this.editedProject = undefined;\n  }\n\n  saveChanges(): void {\n    if (this.editedProject) {\n      this.projectService.updateProject(this.editedProject.id, this.editedProject.name, this.editedProject.description);\n      this.editedProject = undefined;\n      this.getProjects();\n    }\n  }\n\n  applyFilter(event: Event): void {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.projects.filter = filterValue.trim().toLowerCase();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}