{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../task.service\";\nimport * as i2 from \"@angular/common\";\nfunction TaskComponent_tr_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function TaskComponent_tr_30_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const task_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteTask(task_r3));\n    });\n    i0.ɵɵtext(9, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r3.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r3.description);\n  }\n}\nexport class TaskComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    this.tasks = [];\n  }\n  ngOnInit() {\n    this.getTasks();\n  }\n  getTasks() {\n    this.tasks = this.taskService.getTasks();\n  }\n  addTask(name, description, date) {\n    name = name.trim();\n    description = description.trim();\n    if (!name || !description) {\n      return;\n    }\n    this.taskService.addTask(name, description);\n    this.getTasks();\n  }\n  deleteTask(task) {\n    this.tasks = this.tasks.filter(u => u !== task);\n    this.taskService.deleteTask(task);\n  }\n}\nTaskComponent.ɵfac = function TaskComponent_Factory(t) {\n  return new (t || TaskComponent)(i0.ɵɵdirectiveInject(i1.TaskService));\n};\nTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskComponent,\n  selectors: [[\"app-task\"]],\n  decls: 31,\n  vars: 1,\n  consts: [[\"type\", \"text\", \"name\", \"name\", \"required\", \"\"], [\"name\", \"\"], [\"type\", \"text\", \"name\", \"description\", \"required\", \"\"], [\"description\", \"\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function TaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r6 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"task works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\")(3, \"h2\");\n      i0.ɵɵtext(4, \"Add Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\")(6, \"label\");\n      i0.ɵɵtext(7, \" Name: \");\n      i0.ɵɵelement(8, \"input\", 0, 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"label\");\n      i0.ɵɵtext(11, \" Description: \");\n      i0.ɵɵelement(12, \"input\", 2, 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function TaskComponent_Template_button_click_14_listener() {\n        i0.ɵɵrestoreView(_r6);\n        const _r0 = i0.ɵɵreference(9);\n        const _r1 = i0.ɵɵreference(13);\n        ctx.addTask(_r0.value, _r1.value);\n        _r0.value = \"\";\n        return i0.ɵɵresetView(_r1.value = \"\");\n      });\n      i0.ɵɵtext(15, \"Add\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"div\")(17, \"h2\");\n      i0.ɵɵtext(18, \"Task List:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"table\")(20, \"thead\")(21, \"tr\")(22, \"th\");\n      i0.ɵɵtext(23, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"th\");\n      i0.ɵɵtext(25, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"th\");\n      i0.ɵɵtext(27, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(28, \"th\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"tbody\");\n      i0.ɵɵtemplate(30, TaskComponent_tr_30_Template, 10, 3, \"tr\", 5);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(30);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IA2BMA,0BAA+B;IACzBA,YAAa;IAAAA,iBAAK;IACtBA,0BAAI;IAAAA,YAAe;IAAAA,iBAAK;IACxBA,0BAAI;IAAAA,YAAsB;IAAAA,iBAAK;IAC/BA,0BAAI;IAAQA;MAAA;MAAA;MAAA;MAAA,OAASA,yCAAgB;IAAA,EAAC;IAACA,sBAAM;IAAAA,iBAAS;;;;IAHlDA,eAAa;IAAbA,gCAAa;IACbA,eAAe;IAAfA,kCAAe;IACfA,eAAsB;IAAtBA,yCAAsB;;;ACrBlC,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAF/B,UAAK,GAAW,EAAE;EAE6B;EAE/CC,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAA,QAAQ;IACN,IAAI,CAACC,KAAK,GAAG,IAAI,CAACH,WAAW,CAACE,QAAQ,EAAE;EAC1C;EAEAE,OAAO,CAACC,IAAY,EAAEC,WAAmB,EAAEC,IAAU;IACnDF,IAAI,GAAGA,IAAI,CAACG,IAAI,EAAE;IAClBF,WAAW,GAAGA,WAAW,CAACE,IAAI,EAAE;IAChC,IAAI,CAACH,IAAI,IAAI,CAACC,WAAW,EAAE;MACzB;;IAEF,IAAI,CAACN,WAAW,CAACI,OAAO,CAACC,IAAI,EAAEC,WAAW,CAAC;IAC3C,IAAI,CAACJ,QAAQ,EAAE;EACjB;EAEAO,UAAU,CAACC,IAAU;IACnB,IAAI,CAACP,KAAK,GAAG,IAAI,CAACA,KAAK,CAACQ,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKF,IAAI,CAAC;IAC/C,IAAI,CAACV,WAAW,CAACS,UAAU,CAACC,IAAI,CAAC;EACnC;;AA1BWZ,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDT1BpB,yBAAG;MAAAA,2BAAW;MAAAA,iBAAI;MAClBA,2BAAK;MACCA,wBAAQ;MAAAA,iBAAK;MACjBA,4BAAM;MAEFA,uBACA;MAAAA,8BAA8C;MAChDA,iBAAQ;MACRA,8BAAO;MACLA,+BACA;MAAAA,+BAA4D;MAC9DA,iBAAQ;MACRA,kCAA8F;MAAtFA;QAAAA;QAAA;QAAA;QAASqB,iCAAsC;QAAAC,YAAa,EAAE;QAAA,OAAEtB,2BAAkB,EAAE;MAAA,EAAC;MAACA,oBAAG;MAAAA,iBAAS;MAG9GA,4BAAK;MACCA,2BAAU;MAAAA,iBAAK;MACnBA,8BAAO;MAGGA,mBAAE;MAAAA,iBAAK;MACXA,2BAAI;MAAAA,qBAAI;MAAAA,iBAAK;MACbA,2BAAI;MAAAA,4BAAW;MAAAA,iBAAK;MACpBA,sBAAS;MACXA,iBAAK;MAEPA,8BAAO;MACLA,+DAKK;MACPA,iBAAQ;;;MANeA,gBAAQ;MAARA,mCAAQ","names":["i0","TaskComponent","constructor","taskService","ngOnInit","getTasks","tasks","addTask","name","description","date","trim","deleteTask","task","filter","u","selectors","decls","vars","consts","template","ctx","_r0"],"sourceRoot":"","sources":["/Users/denisdalipi/Downloads/angular-project/src/app/task/task.component.html","/Users/denisdalipi/Downloads/angular-project/src/app/task/task.component.ts"],"sourcesContent":["<p>task works!</p>\n<div>\n  <h2>Add Task</h2>\n  <form>\n    <label>\n      Name:\n      <input #name type=\"text\" name=\"name\" required>\n    </label>\n    <label>\n      Description:\n      <input #description type=\"text\" name=\"description\" required>\n    </label>\n    <button (click)=\"addTask(name.value, description.value); name.value=''; description.value=''\">Add</button>\n  </form>\n</div>\n<div>\n  <h2>Task List:</h2>\n  <table>\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Description</th>\n        <th></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let task of tasks\">\n        <td>{{ task.id }}</td>\n        <td>{{ task.name }}</td>\n        <td>{{ task.description }}</td>\n        <td><button (click)=\"deleteTask(task)\">Delete</button></td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import { Component } from '@angular/core';\nimport { Task } from \"../model/task\";\nimport { TaskService } from '../task.service';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent {\n  tasks: Task[] = [];\n\n  constructor(private taskService: TaskService) {}\n\n  ngOnInit() {\n    this.getTasks();\n  }\n\n  getTasks(): void {\n    this.tasks = this.taskService.getTasks();\n  }\n\n  addTask(name: string, description: string, date: Date): void {\n    name = name.trim();\n    description = description.trim();\n    if (!name || !description) {\n      return;\n    }\n    this.taskService.addTask(name, description);\n    this.getTasks();\n  }\n\n  deleteTask(task: Task): void {\n    this.tasks = this.tasks.filter(u => u !== task);\n    this.taskService.deleteTask(task);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}