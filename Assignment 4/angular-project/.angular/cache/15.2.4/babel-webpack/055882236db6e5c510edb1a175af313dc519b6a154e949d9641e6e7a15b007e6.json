{"ast":null,"code":"import _asyncToGenerator from \"/Users/denisdalipi/Downloads/angular-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { UserService } from './user.service';\nimport { ProjectService } from './project.service';\nimport { TaskService } from './task.service';\nimport { TeamService } from './team.service';\nexport function resetDatabase() {\n  return _resetDatabase.apply(this, arguments);\n}\nfunction _resetDatabase() {\n  _resetDatabase = _asyncToGenerator(function* () {\n    if (!(yield shouldResetDatabase())) return;\n    const userServiceDb = new UserService();\n    const projectServiceDb = new ProjectService();\n    const taskServiceDb = new TaskService();\n    const teamServiceDb = new TeamService();\n    yield userServiceDb.delete();\n    yield userServiceDb.open();\n    yield projectServiceDb.delete();\n    yield projectServiceDb.open();\n    yield taskServiceDb.delete();\n    yield taskServiceDb.open();\n    yield teamServiceDb.delete();\n    yield teamServiceDb.open();\n  });\n  return _resetDatabase.apply(this, arguments);\n}\nfunction shouldResetDatabase() {\n  return _shouldResetDatabase.apply(this, arguments);\n}\nfunction _shouldResetDatabase() {\n  _shouldResetDatabase = _asyncToGenerator(function* () {\n    try {\n      const response = yield fetch('../tsconfig.json');\n      const config = yield response.json();\n      return config.resetDatabaseOnServe;\n    } catch (error) {\n      console.error('Error loading config.json:', error);\n      return false;\n    }\n  });\n  return _shouldResetDatabase.apply(this, arguments);\n}","map":{"version":3,"mappings":";AAAA,SAASA,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,gBAAsBC,aAAa;EAAA;AAAA;AAkBlC;EAAA,mCAlBM,aAA4B;IACjC,IAAI,QAAQC,mBAAmB,EAAE,CAAC,EAAE;IACpC,MAAMC,aAAa,GAAG,IAAIN,WAAW,EAAE;IACvC,MAAMO,gBAAgB,GAAG,IAAIN,cAAc,EAAE;IAC7C,MAAMO,aAAa,GAAG,IAAIN,WAAW,EAAE;IACvC,MAAMO,aAAa,GAAG,IAAIN,WAAW,EAAE;IAEvC,MAAMG,aAAa,CAACI,MAAM,EAAE;IAC5B,MAAMJ,aAAa,CAACK,IAAI,EAAE;IAE1B,MAAMJ,gBAAgB,CAACG,MAAM,EAAE;IAC/B,MAAMH,gBAAgB,CAACI,IAAI,EAAE;IAE7B,MAAMH,aAAa,CAACE,MAAM,EAAE;IAC5B,MAAMF,aAAa,CAACG,IAAI,EAAE;IAE1B,MAAMF,aAAa,CAACC,MAAM,EAAE;IAC5B,MAAMD,aAAa,CAACE,IAAI,EAAE;EAC5B,CAAC;EAAA;AAAA;AAAA,SAEcN,mBAAmB;EAAA;AAAA;AAAA;EAAA,yCAAlC,aAAkC;IAChC,IAAI;MACF,MAAMO,QAAQ,SAASC,KAAK,CAAC,kBAAkB,CAAC;MAChD,MAAMC,MAAM,SAASF,QAAQ,CAACG,IAAI,EAAE;MACpC,OAAOD,MAAM,CAACE,oBAAoB;KACnC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,OAAO,KAAK;;EAEhB,CAAC;EAAA;AAAA","names":["UserService","ProjectService","TaskService","TeamService","resetDatabase","shouldResetDatabase","userServiceDb","projectServiceDb","taskServiceDb","teamServiceDb","delete","open","response","fetch","config","json","resetDatabaseOnServe","error","console"],"sourceRoot":"","sources":["/Users/denisdalipi/Downloads/angular-project/src/app/reset-database.ts"],"sourcesContent":["import { UserService } from './user.service';\nimport { ProjectService } from './project.service';\nimport { TaskService } from './task.service';\nimport { TeamService } from './team.service';\n\nexport async function resetDatabase() {\n  if (!(await shouldResetDatabase())) return;\n  const userServiceDb = new UserService();\n  const projectServiceDb = new ProjectService();\n  const taskServiceDb = new TaskService();\n  const teamServiceDb = new TeamService();\n\n  await userServiceDb.delete();\n  await userServiceDb.open();\n\n  await projectServiceDb.delete();\n  await projectServiceDb.open();\n\n  await taskServiceDb.delete();\n  await taskServiceDb.open();\n\n  await teamServiceDb.delete();\n  await teamServiceDb.open();\n}\n\nasync function shouldResetDatabase() {\n  try {\n    const response = await fetch('../tsconfig.json');\n    const config = await response.json();\n    return config.resetDatabaseOnServe;\n  } catch (error) {\n    console.error('Error loading config.json:', error);\n    return false;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}