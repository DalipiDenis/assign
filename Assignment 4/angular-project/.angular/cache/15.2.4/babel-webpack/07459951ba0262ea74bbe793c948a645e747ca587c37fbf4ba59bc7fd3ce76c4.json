{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TaskService {\n  constructor() {\n    this.nextId = 1;\n    this.tasks = [{\n      id: this.nextId++,\n      name: \"Assignment 3\",\n      description: \"Finish assignment 3\",\n      date: new Date(\"2023-04-20\"),\n      done: false\n    }, {\n      id: this.nextId++,\n      name: \"Grade\",\n      description: \"Get Good grade\",\n      date: new Date(\"2023-04-20\"),\n      done: false\n    }];\n  }\n  getTasks() {\n    return this.tasks;\n  }\n  addTask(name, description, date) {\n    const task = {\n      id: this.nextId++,\n      name,\n      description,\n      date,\n      isDone: false\n    };\n    this.tasks.push(task);\n  }\n  deleteTask(task) {\n    const index = this.tasks.findIndex(u => u.id === task.id);\n    if (index >= 0) {\n      this.tasks.splice(index, 1);\n    }\n  }\n  getNextId() {\n    return this.nextId;\n  }\n}\nTaskService.ɵfac = function TaskService_Factory(t) {\n  return new (t || TaskService)();\n};\nTaskService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TaskService,\n  factory: TaskService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAQA,OAAM,MAAOA,WAAW;EAHxBC;IAIU,WAAM,GAAG,CAAC;IAElB,UAAK,GAAU,CACb;MAACC,EAAE,EAAE,IAAI,CAACC,MAAM,EAAE;MAAEC,IAAI,EAAC,cAAc;MAAEC,WAAW,EAAC,qBAAqB;MAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC,YAAY,CAAC;MAAEC,IAAI,EAAE;IAAK,CAAC,EACtH;MAACN,EAAE,EAAE,IAAI,CAACC,MAAM,EAAE;MAAEC,IAAI,EAAC,OAAO;MAAEC,WAAW,EAAC,gBAAgB;MAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC,YAAY,CAAC;MAAEC,IAAI,EAAE;IAAK,CAAC,CAC3G;;EAEDC,QAAQ;IACN,OAAO,IAAI,CAACC,KAAK;EACnB;EAEAC,OAAO,CAACP,IAAY,EAAEC,WAAmB,EAAEC,IAAU;IACjD,MAAMM,IAAI,GAAS;MAAEV,EAAE,EAAE,IAAI,CAACC,MAAM,EAAE;MAAEC,IAAI;MAAEC,WAAW;MAAEC,IAAI;MAAEO,MAAM,EAAE;IAAK,CAAC;IAC/E,IAAI,CAACH,KAAK,CAACI,IAAI,CAACF,IAAI,CAAC;EACvB;EAEFG,UAAU,CAACH,IAAU;IACjB,MAAMI,KAAK,GAAG,IAAI,CAACN,KAAK,CAACO,SAAS,CAACC,CAAC,IAAIA,CAAC,CAAChB,EAAE,KAAKU,IAAI,CAACV,EAAE,CAAC;IACzD,IAAIc,KAAK,IAAI,CAAC,EAAE;MACd,IAAI,CAACN,KAAK,CAACS,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;;EAEjC;EAEAI,SAAS;IACP,OAAO,IAAI,CAACjB,MAAM;EACpB;;AA1BWH,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAqB,SAAXrB,WAAW;EAAAsB,YAFV;AAAM","names":["TaskService","constructor","id","nextId","name","description","date","Date","done","getTasks","tasks","addTask","task","isDone","push","deleteTask","index","findIndex","u","splice","getNextId","factory","providedIn"],"sourceRoot":"","sources":["/Users/denisdalipi/Downloads/angular-project/src/app/task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Task } from './model/task';\nimport { User } from './model/user';\nimport { Project } from './model/project';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  private nextId = 1;\n\n  tasks: Task[]= [\n    {id: this.nextId++, name:\"Assignment 3\", description:\"Finish assignment 3\", date: new Date(\"2023-04-20\"), done: false},\n    {id: this.nextId++, name:\"Grade\", description:\"Get Good grade\", date: new Date(\"2023-04-20\"), done: false}\n  ]\n\n  getTasks(): Task[] {\n    return this.tasks;\n  }\n\n  addTask(name: string, description: string, date: Date) {\n      const task: Task = { id: this.nextId++, name, description, date, isDone: false};\n      this.tasks.push(task);\n    }\n\n  deleteTask(task: Task): void {\n      const index = this.tasks.findIndex(u => u.id === task.id);\n      if (index >= 0) {\n        this.tasks.splice(index, 1);\n      }\n  }\n\n  getNextId(): number {\n    return this.nextId;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}