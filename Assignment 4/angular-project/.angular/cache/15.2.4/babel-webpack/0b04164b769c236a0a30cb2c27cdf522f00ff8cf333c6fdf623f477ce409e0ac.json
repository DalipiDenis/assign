{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TeamService {\n  constructor() {\n    this.nextId = 1;\n    this.user1 = {\n      id: this.nextId++,\n      firstName: 'Denis',\n      lastName: 'Dalipi',\n      username: \"Deda\",\n      email: \"denis.dalipi@unifr.ch\",\n      password: \"1234567890\"\n    };\n    this.user2 = {\n      id: this.nextId++,\n      firstName: 'Guillaume',\n      lastName: 'Venier',\n      username: \"Guve\",\n      email: \"guillaume.venier@unifr.ch\",\n      password: \"1234567890\"\n    };\n    this.teams = [{\n      id: 50,\n      name: \"Team 50\",\n      description: \"Team 50 description\",\n      administrator: this.user1\n    }, {\n      id: 51,\n      name: \"Team 51\",\n      description: \"Team 50 description\",\n      administrator: this.user2\n    }];\n  }\n  getTeams() {\n    return this.teams;\n  }\n  addTeam(name, description, administrator, members, taskList, projectList, moduleList) {\n    const team = {\n      id: this.nextId++,\n      name,\n      description\n    };\n    if (administrator) {\n      team.administrator = administrator;\n    }\n    if (members) {\n      team.members = members;\n    }\n    if (taskList) {\n      team.taskList = taskList;\n    }\n    if (projectList) {\n      team.projectList = projectList;\n    }\n    this.teams.push(team);\n  }\n  deleteTeam(team) {\n    const index = this.teams.findIndex(u => u.id === team.id);\n    if (index >= 0) {\n      this.teams.splice(index, 1);\n    }\n  }\n  getNextId() {\n    return this.nextId;\n  }\n}\nTeamService.ɵfac = function TeamService_Factory(t) {\n  return new (t || TeamService)();\n};\nTeamService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TeamService,\n  factory: TeamService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AASA,OAAM,MAAOA,WAAW;EAHxBC;IAIY,WAAM,GAAG,CAAC;IAClB,UAAK,GAAS;MAAEC,EAAE,EAAE,IAAI,CAACC,MAAM,EAAE;MAAEC,SAAS,EAAE,OAAO;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,QAAQ,EAAE,MAAM;MAAEC,KAAK,EAAE,uBAAuB;MAAEC,QAAQ,EAAE;IAAY,CAAE;IACrJ,UAAK,GAAS;MAAEN,EAAE,EAAE,IAAI,CAACC,MAAM,EAAE;MAAEC,SAAS,EAAE,WAAW;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,QAAQ,EAAE,MAAM;MAAEC,KAAK,EAAE,2BAA2B;MAAEC,QAAQ,EAAE;IAAY,CAAE;IAG7J,UAAK,GAAU,CACb;MAACN,EAAE,EAAE,EAAE;MAAEO,IAAI,EAAC,SAAS;MAAEC,WAAW,EAAC,qBAAqB;MAAEC,aAAa,EAAE,IAAI,CAACC;IAAK,CAAC,EACtF;MAACV,EAAE,EAAE,EAAE;MAAEO,IAAI,EAAC,SAAS;MAAEC,WAAW,EAAC,qBAAqB;MAAEC,aAAa,EAAE,IAAI,CAACE;IAAK,CAAC,CACvF;;EAEDC,QAAQ;IACN,OAAO,IAAI,CAACC,KAAK;EACnB;EAEAC,OAAO,CAACP,IAAY,EAAEC,WAAmB,EAAEC,aAAoB,EAAEM,OAAgB,EAAEC,QAAiB,EAAEC,WAAuB,EAC7HC,UAAqB;IACjB,MAAMC,IAAI,GAAS;MAAEnB,EAAE,EAAE,IAAI,CAACC,MAAM,EAAE;MAAEM,IAAI;MAAEC;IAAW,CAAE;IAC3D,IAAIC,aAAa,EAAE;MACfU,IAAI,CAACV,aAAa,GAAGA,aAAa;;IAEtC,IAAIM,OAAO,EAAE;MACTI,IAAI,CAACJ,OAAO,GAAGA,OAAO;;IAE1B,IAAIC,QAAQ,EAAE;MACVG,IAAI,CAACH,QAAQ,GAAGA,QAAQ;;IAE5B,IAAIC,WAAW,EAAE;MACbE,IAAI,CAACF,WAAW,GAAGA,WAAW;;IAElC,IAAI,CAACJ,KAAK,CAACO,IAAI,CAACD,IAAI,CAAC;EACzB;EAEAE,UAAU,CAACF,IAAU;IACjB,MAAMG,KAAK,GAAG,IAAI,CAACT,KAAK,CAACU,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACxB,EAAE,KAAKmB,IAAI,CAACnB,EAAE,CAAC;IACzD,IAAIsB,KAAK,IAAI,CAAC,EAAE;MACd,IAAI,CAACT,KAAK,CAACY,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;;EAEjC;EAEAI,SAAS;IACP,OAAO,IAAI,CAACzB,MAAM;EACpB;;AA1CSH,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAA6B,SAAX7B,WAAW;EAAA8B,YAFV;AAAM","names":["TeamService","constructor","id","nextId","firstName","lastName","username","email","password","name","description","administrator","user1","user2","getTeams","teams","addTeam","members","taskList","projectList","moduleList","team","push","deleteTeam","index","findIndex","u","splice","getNextId","factory","providedIn"],"sourceRoot":"","sources":["/Users/denisdalipi/Downloads/angular-project/src/app/team.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Team } from './model/team';\nimport { Task } from './model/task';\nimport { User } from './model/user';\nimport { Project } from './model/project';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n    private nextId = 1;\n    user1: User = { id: this.nextId++, firstName: 'Denis', lastName: 'Dalipi', username: \"Deda\", email: \"denis.dalipi@unifr.ch\", password: \"1234567890\" };\n    user2: User = { id: this.nextId++, firstName: 'Guillaume', lastName: 'Venier', username: \"Guve\", email: \"guillaume.venier@unifr.ch\", password: \"1234567890\" };\n\n\n    teams: Team[]= [\n      {id: 50, name:\"Team 50\", description:\"Team 50 description\", administrator: this.user1},\n      {id: 51, name:\"Team 51\", description:\"Team 50 description\", administrator: this.user2}\n    ]\n\n    getTeams(): Team[] {\n      return this.teams;\n    }\n\n    addTeam(name: string, description: string, administrator?: User, members?: User[], taskList?: Task[], projectList?: Project[],\n    moduleList?: string[]): void {\n        const team: Team = { id: this.nextId++, name, description };\n        if (administrator) {\n            team.administrator = administrator;\n        }\n        if (members) {\n            team.members = members;\n        }\n        if (taskList) {\n            team.taskList = taskList;\n        }\n        if (projectList) {\n            team.projectList = projectList;\n        }\n        this.teams.push(team);\n    }\n\n    deleteTeam(team: Team): void {\n        const index = this.teams.findIndex(u => u.id === team.id);\n        if (index >= 0) {\n          this.teams.splice(index, 1);\n        }\n    }\n\n    getNextId(): number {\n      return this.nextId;\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}