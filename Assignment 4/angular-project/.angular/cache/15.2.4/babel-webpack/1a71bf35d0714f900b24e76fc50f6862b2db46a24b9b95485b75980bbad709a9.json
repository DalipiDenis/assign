{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet TaskComponent = class TaskComponent {\n  constructor(taskService, userService, projectService) {\n    this.taskService = taskService;\n    this.userService = userService;\n    this.projectService = projectService;\n    this.selectedUsers = [];\n    this.selectedProjects = [];\n  }\n  ngOnInit() {\n    this.getTasks();\n    this.getUsers();\n    this.getProjects();\n  }\n  getTasks() {\n    this.taskService.getTasks().subscribe(tasks => this.tasks = tasks);\n  }\n  getUsers() {\n    this.userService.getUsers().subscribe(users => this.users = users);\n  }\n  getProjects() {\n    this.projectService.getProjects().subscribe(projects => this.projects = projects);\n  }\n  addTask(name, description, date, assignedUsers, assignedProjects) {\n    name = name.trim();\n    description = description.trim();\n    date = date.trim();\n    if (!name || !description || !date) {\n      return;\n    }\n    this.taskService.addTask({\n      name,\n      description,\n      date,\n      assignedUsers,\n      assignedProjects\n    }).subscribe(task => {\n      this.tasks.push(task);\n    });\n  }\n  deleteTask(task) {\n    this.tasks = this.tasks.filter(t => t !== task);\n    this.taskService.deleteTask(task).subscribe();\n  }\n  updateTask(task) {\n    this.taskService.updateTask(task).subscribe();\n  }\n};\nTaskComponent = __decorate([Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})], TaskComponent);\nexport { TaskComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAY1C,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAOxBC,YAAoBC,WAAwB,EAAUC,WAAwB,EAAUC,cAA8B;IAAlG,gBAAW,GAAXF,WAAW;IAAuB,gBAAW,GAAXC,WAAW;IAAuB,mBAAc,GAAdC,cAAc;IAHtG,kBAAa,GAAW,EAAE;IAC1B,qBAAgB,GAAc,EAAE;EAE0F;EAE1HC,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAF,QAAQ;IACN,IAAI,CAACJ,WAAW,CAACI,QAAQ,EAAE,CACxBG,SAAS,CAACC,KAAK,IAAI,IAAI,CAACA,KAAK,GAAGA,KAAK,CAAC;EAC3C;EAEAH,QAAQ;IACN,IAAI,CAACJ,WAAW,CAACI,QAAQ,EAAE,CACxBE,SAAS,CAACE,KAAK,IAAI,IAAI,CAACA,KAAK,GAAGA,KAAK,CAAC;EAC3C;EAEAH,WAAW;IACT,IAAI,CAACJ,cAAc,CAACI,WAAW,EAAE,CAC9BC,SAAS,CAACG,QAAQ,IAAI,IAAI,CAACA,QAAQ,GAAGA,QAAQ,CAAC;EACpD;EAEAC,OAAO,CAACC,IAAY,EAAEC,WAAmB,EAAEC,IAAY,EAAEC,aAAqB,EAAEC,gBAA2B;IACzGJ,IAAI,GAAGA,IAAI,CAACK,IAAI,EAAE;IAClBJ,WAAW,GAAGA,WAAW,CAACI,IAAI,EAAE;IAChCH,IAAI,GAAGA,IAAI,CAACG,IAAI,EAAE;IAClB,IAAI,CAACL,IAAI,IAAI,CAACC,WAAW,IAAI,CAACC,IAAI,EAAE;MAAE;;IACtC,IAAI,CAACd,WAAW,CAACW,OAAO,CAAC;MAAEC,IAAI;MAAEC,WAAW;MAAEC,IAAI;MAAEC,aAAa;MAAEC;IAAgB,CAAU,CAAC,CAC3FT,SAAS,CAACW,IAAI,IAAG;MAChB,IAAI,CAACV,KAAK,CAACW,IAAI,CAACD,IAAI,CAAC;IACvB,CAAC,CAAC;EACN;EAEAE,UAAU,CAACF,IAAU;IACnB,IAAI,CAACV,KAAK,GAAG,IAAI,CAACA,KAAK,CAACa,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKJ,IAAI,CAAC;IAC/C,IAAI,CAAClB,WAAW,CAACoB,UAAU,CAACF,IAAI,CAAC,CAACX,SAAS,EAAE;EAC/C;EAEAgB,UAAU,CAACL,IAAU;IACnB,IAAI,CAAClB,WAAW,CAACuB,UAAU,CAACL,IAAI,CAAC,CAACX,SAAS,EAAE;EAC/C;CAED;AAlDYT,aAAa,eALzBD,SAAS,CAAC;EACT2B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GACW5B,aAAa,CAkDzB;SAlDYA,aAAa","names":["Component","TaskComponent","constructor","taskService","userService","projectService","ngOnInit","getTasks","getUsers","getProjects","subscribe","tasks","users","projects","addTask","name","description","date","assignedUsers","assignedProjects","trim","task","push","deleteTask","filter","t","updateTask","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/denisdalipi/Downloads/angular-project/src/app/task/task.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Task } from '../task';\nimport { UserService } from '../user.service';\nimport { User } from '../user';\nimport { Project } from '../project';\nimport { ProjectService } from '../project.service';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {\n  tasks: Task[];\n  users: User[];\n  projects: Project[];\n  selectedUsers: User[] = [];\n  selectedProjects: Project[] = [];\n\n  constructor(private taskService: TaskService, private userService: UserService, private projectService: ProjectService) { }\n\n  ngOnInit() {\n    this.getTasks();\n    this.getUsers();\n    this.getProjects();\n  }\n\n  getTasks(): void {\n    this.taskService.getTasks()\n      .subscribe(tasks => this.tasks = tasks);\n  }\n\n  getUsers(): void {\n    this.userService.getUsers()\n      .subscribe(users => this.users = users);\n  }\n\n  getProjects(): void {\n    this.projectService.getProjects()\n      .subscribe(projects => this.projects = projects);\n  }\n\n  addTask(name: string, description: string, date: string, assignedUsers: User[], assignedProjects: Project[]): void {\n    name = name.trim();\n    description = description.trim();\n    date = date.trim();\n    if (!name || !description || !date) { return; }\n    this.taskService.addTask({ name, description, date, assignedUsers, assignedProjects } as Task)\n      .subscribe(task => {\n        this.tasks.push(task);\n      });\n  }\n\n  deleteTask(task: Task): void {\n    this.tasks = this.tasks.filter(t => t !== task);\n    this.taskService.deleteTask(task).subscribe();\n  }\n\n  updateTask(task: Task): void {\n    this.taskService.updateTask(task).subscribe();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}