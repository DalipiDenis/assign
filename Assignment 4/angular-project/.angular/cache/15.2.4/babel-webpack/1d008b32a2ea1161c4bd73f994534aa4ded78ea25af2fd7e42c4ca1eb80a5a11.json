{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nlet TaskComponent = class TaskComponent {\n  constructor(taskService, userService, projectService, formBuilder) {\n    this.taskService = taskService;\n    this.userService = userService;\n    this.projectService = projectService;\n    this.formBuilder = formBuilder;\n    this.tasks = [];\n    this.dataSource = new MatTableDataSource(); // Add this line\n    this.users = [];\n    this.projects = [];\n    this.selectedTask = {};\n    this.displayedColumns = ['id', 'name', 'description', 'date', 'isDone', 'assignedUsers', 'assignedProjects', 'actions'];\n  }\n  ngOnInit() {\n    this.getTasks();\n    this.getUsers();\n    this.getProjects();\n  }\n  getTasks() {\n    this.tasks = this.taskService.getTasks();\n    this.dataSource.data = this.tasks;\n  }\n  getUsers() {\n    this.users = this.userService.getUsers();\n  }\n  getProjects() {\n    this.projects = this.projectService.getProjects();\n  }\n  addTask(name, description, date, assignedUsers, assignedProjects) {\n    this.taskService.addTask(name, description, date, assignedUsers, assignedProjects);\n    this.getTasks();\n  }\n  deleteTask(task) {\n    this.tasks = this.tasks.filter(u => u !== task);\n    this.taskService.deleteTask(task);\n  }\n  openEditDialog(task) {\n    this.selectedTask = {\n      ...task\n    };\n  }\n  editTask(task) {\n    this.selectedTask = {\n      ...task\n    };\n  }\n  saveTask(task) {\n    const index = this.tasks.findIndex(t => t.id === task.id);\n    if (index >= 0) {\n      this.tasks[index] = task;\n      this.taskService.updateTask(task);\n    }\n  }\n  updateTask(task) {\n    const index = this.tasks.findIndex(t => t.id === task.id);\n    if (index >= 0) {\n      this.tasks[index] = task;\n    }\n  }\n};\nTaskComponent = __decorate([Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})], TaskComponent);\nexport { TaskComponent };","map":{"version":3,"mappings":"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","names":["Component","MatTableDataSource","TaskComponent","constructor","taskService","userService","projectService","formBuilder","ngOnInit","getTasks","getUsers","getProjects","tasks","dataSource","data","users","projects","addTask","name","description","date","assignedUsers","assignedProjects","deleteTask","task","filter","u","openEditDialog","selectedTask","editTask","saveTask","index","findIndex","t","id","updateTask","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/denisdalipi/Downloads/angular-project/src/app/task/task.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Task } from \"../model/task\";\nimport { TaskService } from '../task.service';\nimport { UserService } from '../user.service';\nimport { User } from '../model/user';\nimport { Project } from '../model/project';\nimport { ProjectService } from '../project.service';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {\n  tasks: Task[] = [];\n  dataSource: MatTableDataSource<Task> = new MatTableDataSource<Task>(); // Add this line\n\n  users: User[] = [];\n  projects: Project[] = [];\n  selectedTask: Task = {} as Task;\n  displayedColumns: string[] = ['id', 'name', 'description', 'date', 'isDone', 'assignedUsers', 'assignedProjects', 'actions'];\n  taskForm: FormGroup;\n\n  constructor(private taskService: TaskService, private userService: UserService, private projectService: ProjectService, private formBuilder: FormBuilder ) {}\n\n  ngOnInit() {\n    this.getTasks();\n    this.getUsers();\n    this.getProjects();\n  }\n\n  getTasks(): void {\n  this.tasks = this.taskService.getTasks();\n  this.dataSource.data = this.tasks;\n}\n\n\n  getUsers(): void {\n    this.users = this.userService.getUsers();\n  }\n\n  getProjects(): void {\n    this.projects = this.projectService.getProjects();\n  }\n\n  addTask(name: string, description: string, date: Date, assignedUsers: User[], assignedProjects: Project[]): void {\n  this.taskService.addTask(name, description, date, assignedUsers, assignedProjects);\n  this.getTasks();\n}\n\n\n  deleteTask(task: Task): void {\n    this.tasks = this.tasks.filter(u => u !== task);\n    this.taskService.deleteTask(task);\n  }\n\n  openEditDialog(task: Task): void {\n    this.selectedTask = { ...task };\n  }\n\n  editTask(task: Task): void {\n  this.selectedTask = { ...task };\n}\n\n\n  saveTask(task: Task): void {\n  const index = this.tasks.findIndex(t => t.id === task.id);\n  if (index >= 0) {\n    this.tasks[index] = task;\n    this.taskService.updateTask(task);\n    }\n}\n\nupdateTask(task: Task): void {\nconst index = this.tasks.findIndex(t => t.id === task.id);\nif (index >= 0) {\nthis.tasks[index] = task;\n}\n}\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}