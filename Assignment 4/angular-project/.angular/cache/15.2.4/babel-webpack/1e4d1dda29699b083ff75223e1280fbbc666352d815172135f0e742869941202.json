{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TeamService {\n  constructor() {\n    this.nextId = 1;\n    this.teams = [{\n      id: 50,\n      name: \"Team 50\",\n      description: \"Team 50 description\"\n    }, {\n      id: 51,\n      name: \"Team 51\",\n      description: \"Team 51 description\"\n    }];\n  }\n  getTeams() {\n    return this.teams;\n  }\n  addTeam(name, description, administrator, members, taskList, projectList, moduleList) {\n    const team = {\n      id: this.nextId++,\n      name,\n      description\n    };\n    if (administrator) {\n      team.administrator = administrator;\n    }\n    if (members) {\n      team.members = members;\n    }\n    if (taskList) {\n      team.taskList = taskList;\n    }\n    if (projectList) {\n      team.projectList = projectList;\n    }\n    this.teams.push(team);\n  }\n  deleteTeam(team) {\n    const index = this.teams.findIndex(u => u.id === team.id);\n    if (index >= 0) {\n      this.teams.splice(index, 1);\n    }\n  }\n  getNextId() {\n    return this.nextId;\n  }\n}\nTeamService.ɵfac = function TeamService_Factory(t) {\n  return new (t || TeamService)();\n};\nTeamService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TeamService,\n  factory: TeamService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AASA,OAAM,MAAOA,WAAW;EAHxBC;IAIY,WAAM,GAAG,CAAC;IAElB,UAAK,GAAU,CACb;MAACC,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAC,SAAS;MAAEC,WAAW,EAAC;IAAqB,CAAC,EAC3D;MAACF,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAC,SAAS;MAAEC,WAAW,EAAC;IAAqB,CAAC,CAC5D;;EAEDC,QAAQ;IACN,OAAO,IAAI,CAACC,KAAK;EACnB;EAEAC,OAAO,CAACJ,IAAY,EAAEC,WAAmB,EAAEI,aAAoB,EAAEC,OAAgB,EAAEC,QAAiB,EAAEC,WAAuB,EAC7HC,UAAqB;IACjB,MAAMC,IAAI,GAAS;MAAEX,EAAE,EAAE,IAAI,CAACY,MAAM,EAAE;MAAEX,IAAI;MAAEC;IAAW,CAAE;IAC3D,IAAII,aAAa,EAAE;MACfK,IAAI,CAACL,aAAa,GAAGA,aAAa;;IAEtC,IAAIC,OAAO,EAAE;MACTI,IAAI,CAACJ,OAAO,GAAGA,OAAO;;IAE1B,IAAIC,QAAQ,EAAE;MACVG,IAAI,CAACH,QAAQ,GAAGA,QAAQ;;IAE5B,IAAIC,WAAW,EAAE;MACbE,IAAI,CAACF,WAAW,GAAGA,WAAW;;IAElC,IAAI,CAACL,KAAK,CAACS,IAAI,CAACF,IAAI,CAAC;EACzB;EAEAG,UAAU,CAACH,IAAU;IACjB,MAAMI,KAAK,GAAG,IAAI,CAACX,KAAK,CAACY,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACjB,EAAE,KAAKW,IAAI,CAACX,EAAE,CAAC;IACzD,IAAIe,KAAK,IAAI,CAAC,EAAE;MACd,IAAI,CAACX,KAAK,CAACc,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;;EAEjC;EAEAI,SAAS;IACP,OAAO,IAAI,CAACP,MAAM;EACpB;;AAvCSd,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAsB,SAAXtB,WAAW;EAAAuB,YAFV;AAAM","names":["TeamService","constructor","id","name","description","getTeams","teams","addTeam","administrator","members","taskList","projectList","moduleList","team","nextId","push","deleteTeam","index","findIndex","u","splice","getNextId","factory","providedIn"],"sourceRoot":"","sources":["/Users/denisdalipi/Downloads/angular-project/src/app/team.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Team } from './model/team';\nimport { Task } from './model/task';\nimport { User } from './model/user';\nimport { Project } from './model/project';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n    private nextId = 1;\n\n    teams: Team[]= [\n      {id: 50, name:\"Team 50\", description:\"Team 50 description\"},\n      {id: 51, name:\"Team 51\", description:\"Team 51 description\"}\n    ]\n\n    getTeams(): Team[] {\n      return this.teams;\n    }\n\n    addTeam(name: string, description: string, administrator?: User, members?: User[], taskList?: Task[], projectList?: Project[],\n    moduleList?: string[]): void {\n        const team: Team = { id: this.nextId++, name, description };\n        if (administrator) {\n            team.administrator = administrator;\n        }\n        if (members) {\n            team.members = members;\n        }\n        if (taskList) {\n            team.taskList = taskList;\n        }\n        if (projectList) {\n            team.projectList = projectList;\n        }\n        this.teams.push(team);\n    }\n\n    deleteTeam(team: Team): void {\n        const index = this.teams.findIndex(u => u.id === team.id);\n        if (index >= 0) {\n          this.teams.splice(index, 1);\n        }\n    }\n\n    getNextId(): number {\n      return this.nextId;\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}