{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./task.service\";\nimport * as i2 from \"./user.service\";\nimport * as i3 from \"./project.service\";\nimport * as i4 from \"./task/task.component\";\nimport * as i5 from \"./project/project.component\";\nimport * as i6 from \"./user/user.component\";\nexport class AppComponent {\n  constructor(taskService, userService, projectService) {\n    this.taskService = taskService;\n    this.userService = userService;\n    this.projectService = projectService;\n    this.title = \"Master Task Manager\";\n    this.tasks = taskService.tasks;\n    this.assignedUsers = userService.users;\n    this.assignedProjects = projectService.projects;\n  }\n  addUser(firstName, lastName) {\n    this.userService.addUser(firstName, lastName);\n    this.assignedUsers = this.userService.users;\n  }\n  removeUser(user) {\n    this.userService.deleteUser(user);\n    this.assignedUsers = this.userService.users;\n  }\n  addTask(name, description, assignedUsers, assignedProjects) {\n    this.taskService.addTask(name, description, assignedUsers, assignedProjects);\n    this.tasks = this.taskService.tasks;\n  }\n  removeTask(task) {\n    this.taskService.deleteTask(task);\n    this.tasks = this.taskService.tasks;\n  }\n  addProject(name, description) {\n    this.projectService.addProject(name, description);\n    this.assignedProjects = this.projectService.projects;\n  }\n  removeProject(project) {\n    this.projectService.deleteProject(project);\n    this.assignedProjects = this.projectService.projects;\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.ProjectService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 5,\n  vars: 0,\n  consts: [[\"src\", \"assets/task_manager.png\", \"alt\", \"Task Manager Logo\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵelement(1, \"img\", 0)(2, \"app-user\")(3, \"app-project\")(4, \"app-task\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  dependencies: [i4.TaskComponent, i5.ProjectComponent, i6.UserComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;AAaA,OAAM,MAAOA,YAAY;EAMvBC,YAAoBC,WAAwB,EAAUC,WAAuB,EAAUC,cAA8B;IAAjG,gBAAW,GAAXF,WAAW;IAAuB,gBAAW,GAAXC,WAAW;IAAsB,mBAAc,GAAdC,cAAc;IALrG,UAAK,GAAE,qBAAqB;IAM1B,IAAI,CAACC,KAAK,GAAGH,WAAW,CAACG,KAAK;IAC9B,IAAI,CAACC,aAAa,GAAGH,WAAW,CAACI,KAAK;IACtC,IAAI,CAACC,gBAAgB,GAAGJ,cAAc,CAACK,QAAQ;EACjD;EAEAC,OAAO,CAACC,SAAiB,EAACC,QAAe;IACvC,IAAI,CAACT,WAAW,CAACO,OAAO,CAACC,SAAS,EAACC,QAAQ,CAAC;IAC5C,IAAI,CAACN,aAAa,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK;EAC7C;EAEAM,UAAU,CAACC,IAAU;IACnB,IAAI,CAACX,WAAW,CAACY,UAAU,CAACD,IAAI,CAAC;IACjC,IAAI,CAACR,aAAa,GAAE,IAAI,CAACH,WAAW,CAACI,KAAK;EAC5C;EAEAS,OAAO,CAACC,IAAY,EAAEC,WAAmB,EAAEZ,aAAqB,EAAEE,gBAA2B;IAC3F,IAAI,CAACN,WAAW,CAACc,OAAO,CAACC,IAAI,EAAEC,WAAW,EAAEZ,aAAa,EAAEE,gBAAgB,CAAC;IAC5E,IAAI,CAACH,KAAK,GAAG,IAAI,CAACH,WAAW,CAACG,KAAK;EACrC;EAEAc,UAAU,CAACC,IAAU;IACnB,IAAI,CAAClB,WAAW,CAACmB,UAAU,CAACD,IAAI,CAAC;IACjC,IAAI,CAACf,KAAK,GAAG,IAAI,CAACH,WAAW,CAACG,KAAK;EACrC;EAEAiB,UAAU,CAACL,IAAY,EAAEC,WAAmB;IAC1C,IAAI,CAACd,cAAc,CAACkB,UAAU,CAACL,IAAI,EAAEC,WAAW,CAAC;IACjD,IAAI,CAACV,gBAAgB,GAAG,IAAI,CAACJ,cAAc,CAACK,QAAQ;EACtD;EAEAc,aAAa,CAACC,OAAgB;IAC5B,IAAI,CAACpB,cAAc,CAACqB,aAAa,CAACD,OAAO,CAAC;IAC1C,IAAI,CAAChB,gBAAgB,GAAG,IAAI,CAACJ,cAAc,CAACK,QAAQ;EACtD;;AAxCWT,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZzBC,2BAAK;MACDA,yBAA2D;MAI/DA,iBAAM","names":["AppComponent","constructor","taskService","userService","projectService","tasks","assignedUsers","users","assignedProjects","projects","addUser","firstName","lastName","removeUser","user","deleteUser","addTask","name","description","removeTask","task","deleteTask","addProject","removeProject","project","deleteProject","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/denisdalipi/Downloads/angular-project/src/app/app.component.ts","/Users/denisdalipi/Downloads/angular-project/src/app/app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { TaskService } from './task.service';\nimport { Task } from './model/task';\nimport { User } from './model/user';\nimport { Project } from './model/project';\nimport { UserService } from './user.service';\nimport { ProjectService } from './project.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title= \"Master Task Manager\"\n  tasks: Task[];\n  assignedUsers: User[];\n  assignedProjects: Project[];\n\n  constructor(private taskService: TaskService, private userService:UserService, private projectService: ProjectService) {\n    this.tasks = taskService.tasks;\n    this.assignedUsers = userService.users;\n    this.assignedProjects = projectService.projects;\n  }\n\n  addUser(firstName: string,lastName:string) {\n    this.userService.addUser(firstName,lastName);\n    this.assignedUsers = this.userService.users;\n  }\n\n  removeUser(user: User) {\n    this.userService.deleteUser(user);\n    this.assignedUsers= this.userService.users;\n  }\n\n  addTask(name: string, description: string, assignedUsers: User[], assignedProjects: Project[]) {\n    this.taskService.addTask(name, description, assignedUsers ,assignedProjects);\n    this.tasks = this.taskService.tasks;\n  }\n\n  removeTask(task: Task) {\n    this.taskService.deleteTask(task);\n    this.tasks = this.taskService.tasks;\n  }\n\n  addProject(name: string, description: string){\n    this.projectService.addProject(name, description);\n    this.assignedProjects = this.projectService.projects;\n  }\n\n  removeProject(project: Project) {\n    this.projectService.deleteProject(project);\n    this.assignedProjects = this.projectService.projects;\n  }\n}\n","\n<div>\n    <img src=\"assets/task_manager.png\" alt=\"Task Manager Logo\">\n    <app-user></app-user>\n    <app-project></app-project>\n    <app-task></app-task>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}