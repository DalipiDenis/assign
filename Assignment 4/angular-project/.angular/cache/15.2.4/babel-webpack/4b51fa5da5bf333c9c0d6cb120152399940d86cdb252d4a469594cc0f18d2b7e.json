{"ast":null,"code":"import _asyncToGenerator from \"/Users/denisdalipi/Downloads/angular-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport Dexie from 'dexie';\nimport * as i0 from \"@angular/core\";\nexport class TaskService extends Dexie {\n  constructor() {\n    super('TaskServiceDatabase');\n    this.version(1).stores({\n      tasks: '++id, name, description, date, isDone, assignedUsers, assignedProjects'\n    });\n    this.tasks = this.table('tasks');\n  }\n  getTasks() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return _this.tasks.toArray();\n    })();\n  }\n  addTask(name, description, date, assignedUsers, assignedProjects) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const task = {\n        name,\n        description,\n        date,\n        isDone: false\n      };\n      if (assignedUsers) {\n        task.assignedUsers = assignedUsers;\n      }\n      if (assignedProjects) {\n        task.assignedProjects = assignedProjects;\n      }\n      yield _this2.tasks.add(task);\n    })();\n  }\n  deleteTask(task) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      yield _this3.tasks.delete(task.id);\n    })();\n  }\n  updateTask(task) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      yield _this4.tasks.update(task.id, task);\n    })();\n  }\n}\nTaskService.ɵfac = function TaskService_Factory(t) {\n  return new (t || TaskService)();\n};\nTaskService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TaskService,\n  factory: TaskService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAIA,OAAOA,KAAK,MAAM,OAAO;;AAKzB,OAAM,MAAOC,WAAY,SAAQD,KAAK;EAGpCE;IACE,KAAK,CAAC,qBAAqB,CAAC;IAC5B,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC;MACrBC,KAAK,EAAE;KACR,CAAC;IAEF,IAAI,CAACA,KAAK,GAAG,IAAI,CAACC,KAAK,CAAC,OAAO,CAAC;EAClC;EAEMC,QAAQ;IAAA;IAAA;MACZ,OAAO,KAAI,CAACF,KAAK,CAACG,OAAO,EAAE;IAAC;EAC9B;EAEMC,OAAO,CAACC,IAAY,EAAEC,WAAmB,EAAEC,IAAU,EAAEC,aAAsB,EAAEC,gBAA4B;IAAA;IAAA;MAC/G,MAAMC,IAAI,GAAS;QAAEL,IAAI;QAAEC,WAAW;QAAEC,IAAI;QAAEI,MAAM,EAAE;MAAK,CAAE;MAC7D,IAAIH,aAAa,EAAE;QACjBE,IAAI,CAACF,aAAa,GAAGA,aAAa;;MAEpC,IAAIC,gBAAgB,EAAE;QACpBC,IAAI,CAACD,gBAAgB,GAAGA,gBAAgB;;MAE1C,MAAM,MAAI,CAACT,KAAK,CAACY,GAAG,CAACF,IAAI,CAAC;IAAC;EAC7B;EAEMG,UAAU,CAACH,IAAU;IAAA;IAAA;MACzB,MAAM,MAAI,CAACV,KAAK,CAACc,MAAM,CAACJ,IAAI,CAACK,EAAE,CAAC;IAAC;EACnC;EAEMC,UAAU,CAACN,IAAU;IAAA;IAAA;MACzB,MAAM,MAAI,CAACV,KAAK,CAACiB,MAAM,CAACP,IAAI,CAACK,EAAE,EAAEL,IAAI,CAAC;IAAC;EACzC;;AAjCWd,WAAY;mBAAZA,WAAW;AAAA;AAAXA,WAAY;SAAZA,WAAW;EAAAsB,SAAXtB,WAAW;EAAAuB,YAFV;AAAM","names":["Dexie","TaskService","constructor","version","stores","tasks","table","getTasks","toArray","addTask","name","description","date","assignedUsers","assignedProjects","task","isDone","add","deleteTask","delete","id","updateTask","update","factory","providedIn"],"sourceRoot":"","sources":["/Users/denisdalipi/Downloads/angular-project/src/app/task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Task } from './model/task';\nimport { User } from './model/user';\nimport { Project } from './model/project';\nimport Dexie from 'dexie';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService extends Dexie {\n  tasks: Dexie.Table<Task, number>;\n\n  constructor() {\n    super('TaskServiceDatabase');\n    this.version(1).stores({\n      tasks: '++id, name, description, date, isDone, assignedUsers, assignedProjects'\n    });\n\n    this.tasks = this.table('tasks');\n  }\n\n  async getTasks(): Promise<Task[]> {\n    return this.tasks.toArray();\n  }\n\n  async addTask(name: string, description: string, date: Date, assignedUsers?: User[], assignedProjects?: Project[]): Promise<void> {\n    const task: Task = { name, description, date, isDone: false };\n    if (assignedUsers) {\n      task.assignedUsers = assignedUsers;\n    }\n    if (assignedProjects) {\n      task.assignedProjects = assignedProjects;\n    }\n    await this.tasks.add(task);\n  }\n\n  async deleteTask(task: Task): Promise<void> {\n    await this.tasks.delete(task.id);\n  }\n\n  async updateTask(task: Task): Promise<void> {\n    await this.tasks.update(task.id, task);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}