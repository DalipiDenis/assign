{"ast":null,"code":"import _asyncToGenerator from \"/Users/denisdalipi/Downloads/angular-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../task.service\";\nimport * as i2 from \"../user.service\";\nimport * as i3 from \"../project.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/table\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/datepicker\";\nimport * as i11 from \"@angular/material/select\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"@angular/material/checkbox\";\nfunction TaskComponent_mat_header_cell_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"ID\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskComponent_mat_cell_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r20 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r20.id);\n  }\n}\nfunction TaskComponent_mat_header_cell_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Name\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskComponent_mat_cell_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r21 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r21.name);\n  }\n}\nfunction TaskComponent_mat_header_cell_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Description\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskComponent_mat_cell_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r22 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r22.description);\n  }\n}\nfunction TaskComponent_mat_header_cell_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Date\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskComponent_mat_cell_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r23 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, task_r23.date));\n  }\n}\nfunction TaskComponent_mat_header_cell_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Done\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskComponent_mat_cell_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-cell\")(1, \"mat-checkbox\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskComponent_mat_cell_18_Template_mat_checkbox_ngModelChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const task_r24 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(task_r24.isDone = $event);\n    })(\"change\", function TaskComponent_mat_cell_18_Template_mat_checkbox_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const task_r24 = restoredCtx.$implicit;\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.onTaskStatusChange(task_r24));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r24 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", task_r24.isDone);\n  }\n}\nfunction TaskComponent_mat_header_cell_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Users\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskComponent_mat_cell_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r28 = ctx.$implicit;\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r11.getDisplayUsers(task_r28));\n  }\n}\nfunction TaskComponent_mat_header_cell_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Projects\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskComponent_mat_cell_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r29 = ctx.$implicit;\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r13.getDisplayProjects(task_r29));\n  }\n}\nfunction TaskComponent_mat_header_cell_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Actions\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskComponent_mat_cell_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-cell\")(1, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function TaskComponent_mat_cell_27_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r32);\n      const task_r30 = restoredCtx.$implicit;\n      const ctx_r31 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r31.editTask(task_r30));\n    });\n    i0.ɵɵtext(2, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function TaskComponent_mat_cell_27_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r32);\n      const task_r30 = restoredCtx.$implicit;\n      const ctx_r33 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r33.deleteTask(task_r30));\n    });\n    i0.ɵɵtext(4, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TaskComponent_mat_header_row_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-header-row\");\n  }\n}\nfunction TaskComponent_mat_row_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-row\");\n  }\n}\nfunction TaskComponent_div_30_mat_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r38 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r38);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r38.firstName);\n  }\n}\nfunction TaskComponent_div_30_mat_option_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r39 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", project_r39);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(project_r39.name);\n  }\n}\nfunction TaskComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r41 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Add Task\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 17)(4, \"mat-form-field\")(5, \"mat-label\");\n    i0.ɵɵtext(6, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"mat-form-field\")(9, \"mat-label\");\n    i0.ɵɵtext(10, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"mat-form-field\")(13, \"mat-label\");\n    i0.ɵɵtext(14, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"input\", 20)(16, \"mat-datepicker-toggle\", 21)(17, \"mat-datepicker\", null, 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"mat-form-field\")(20, \"mat-label\");\n    i0.ɵɵtext(21, \"Assign users\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"mat-select\", 23);\n    i0.ɵɵtemplate(23, TaskComponent_div_30_mat_option_23_Template, 2, 2, \"mat-option\", 24);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(24, \"mat-form-field\")(25, \"mat-label\");\n    i0.ɵɵtext(26, \"Assign projects\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"mat-select\", 25);\n    i0.ɵɵtemplate(28, TaskComponent_div_30_mat_option_28_Template, 2, 2, \"mat-option\", 24);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(29, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function TaskComponent_div_30_Template_button_click_29_listener() {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r40 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r40.saveTask());\n    });\n    i0.ɵɵtext(30, \"Save\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const _r35 = i0.ɵɵreference(18);\n    const ctx_r18 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r18.taskForm);\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"matDatepicker\", _r35);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r35);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r18.users);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r18.projects);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r18.taskForm.invalid);\n  }\n}\nfunction TaskComponent_div_31_form_3_mat_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r46 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r46);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r46.firstName);\n  }\n}\nfunction TaskComponent_div_31_form_3_mat_option_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r47 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", project_r47);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(project_r47.name);\n  }\n}\nfunction TaskComponent_div_31_form_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r49 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 17)(1, \"mat-form-field\")(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-form-field\")(6, \"mat-label\");\n    i0.ɵɵtext(7, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-form-field\")(10, \"mat-label\");\n    i0.ɵɵtext(11, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 20)(13, \"mat-datepicker-toggle\", 21)(14, \"mat-datepicker\", null, 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"mat-form-field\")(17, \"mat-label\");\n    i0.ɵɵtext(18, \"Assign users\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"mat-select\", 29);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskComponent_div_31_form_3_Template_mat_select_ngModelChange_19_listener($event) {\n      i0.ɵɵrestoreView(_r49);\n      const ctx_r48 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r48.editedTask.assignedUsers = $event);\n    });\n    i0.ɵɵtemplate(20, TaskComponent_div_31_form_3_mat_option_20_Template, 2, 2, \"mat-option\", 24);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"mat-form-field\")(22, \"mat-label\");\n    i0.ɵɵtext(23, \"Assign projects\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"mat-select\", 29);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskComponent_div_31_form_3_Template_mat_select_ngModelChange_24_listener($event) {\n      i0.ɵɵrestoreView(_r49);\n      const ctx_r50 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r50.editedTask.assignedProjects = $event);\n    });\n    i0.ɵɵtemplate(25, TaskComponent_div_31_form_3_mat_option_25_Template, 2, 2, \"mat-option\", 24);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function TaskComponent_div_31_form_3_Template_button_click_26_listener() {\n      i0.ɵɵrestoreView(_r49);\n      const ctx_r51 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r51.updateTask());\n    });\n    i0.ɵɵtext(27, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function TaskComponent_div_31_form_3_Template_button_click_28_listener() {\n      i0.ɵɵrestoreView(_r49);\n      const ctx_r52 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r52.cancelEditing());\n    });\n    i0.ɵɵtext(29, \"Cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r43 = i0.ɵɵreference(15);\n    const ctx_r42 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r42.taskForm);\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"matDatepicker\", _r43);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r43);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r42.editedTask.assignedUsers);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r42.users);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r42.editedTask.assignedProjects);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r42.projects);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r42.taskForm.invalid);\n  }\n}\nfunction TaskComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Edit Task\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, TaskComponent_div_31_form_3_Template, 30, 8, \"form\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r19.editedTask);\n  }\n}\nexport class TaskComponent {\n  constructor(taskService, userService, projectService, formBuilder) {\n    this.taskService = taskService;\n    this.userService = userService;\n    this.projectService = projectService;\n    this.formBuilder = formBuilder;\n    this.tasks = [];\n    this.dataSource = new MatTableDataSource([]);\n    this.editedTask = null;\n    this.users = [];\n    this.projects = [];\n    this.displayedColumns = ['id', 'name', 'description', 'date', 'done', 'users', 'projects', 'actions'];\n    this.taskForm = this.formBuilder.group({\n      id: [''],\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      date: ['', Validators.required],\n      assignedUsers: [''],\n      assignedProjects: ['']\n    });\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.getTasks();\n      yield _this.getUsers();\n      yield _this.getProjects();\n    })();\n  }\n  getUsers() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.users = yield _this2.userService.getUsers();\n    })();\n  }\n  getProjects() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      _this3.projects = yield _this3.projectService.getProjects();\n    })();\n  }\n  getTasks() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      _this4.tasks = yield _this4.taskService.getTasks();\n      _this4.dataSource = new MatTableDataSource(_this4.tasks);\n    })();\n  }\n  saveTask() {\n    const task = this.taskForm.value;\n    if (task.id) {\n      this.taskService.updateTask(task);\n    } else {\n      this.addNewTask(task.name, task.description, task.date, task.assignedUsers, task.assignedProjects);\n    }\n    this.taskForm.reset();\n    this.getTasks();\n  }\n  editTask(task) {\n    this.editedTask = task;\n  }\n  addNewTask(name, description, date, assignedUsers, assignedProjects) {\n    this.taskService.addTask(name, description, date, assignedUsers, assignedProjects);\n    this.getTasks();\n  }\n  deleteTask(task) {\n    this.taskService.deleteTask(task);\n    this.getTasks();\n  }\n  editTask(task) {\n    this.taskForm.patchValue({\n      ...task,\n      id: task.id\n    });\n  }\n  getDisplayUsers(task) {\n    return task.assignedUsers ? task.assignedUsers.map(user => `${user.firstName} ${user.lastName}`).join(', ') : '';\n  }\n  getDisplayProjects(task) {\n    return task.assignedProjects ? task.assignedProjects.map(project => `${project.name}`).join(', ') : '';\n  }\n  onTaskStatusChange(task) {\n    this.taskService.updateTask(task);\n  }\n}\nTaskComponent.ɵfac = function TaskComponent_Factory(t) {\n  return new (t || TaskComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.ProjectService), i0.ɵɵdirectiveInject(i4.FormBuilder));\n};\nTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskComponent,\n  selectors: [[\"app-task\"]],\n  decls: 32,\n  vars: 5,\n  consts: [[3, \"dataSource\"], [\"matColumnDef\", \"id\"], [4, \"matHeaderCellDef\"], [4, \"matCellDef\"], [\"matColumnDef\", \"name\"], [\"matColumnDef\", \"description\"], [\"matColumnDef\", \"date\"], [\"matColumnDef\", \"done\"], [\"matColumnDef\", \"users\"], [\"matColumnDef\", \"projects\"], [\"matColumnDef\", \"actions\"], [4, \"matHeaderRowDef\"], [4, \"matRowDef\", \"matRowDefColumns\"], [4, \"ngIf\"], [3, \"ngModel\", \"ngModelChange\", \"change\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 3, \"click\"], [3, \"formGroup\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"placeholder\", \"Name\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"description\", \"placeholder\", \"Description\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"date\", \"placeholder\", \"Date\", \"required\", \"\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [\"formControlName\", \"assignedUsers\", \"multiple\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"assignedProjects\", \"multiple\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [3, \"value\"], [3, \"formGroup\", 4, \"ngIf\"], [\"multiple\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"click\"]],\n  template: function TaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n      i0.ɵɵtext(2, \"Task Management\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"mat-table\", 0);\n      i0.ɵɵelementContainerStart(4, 1);\n      i0.ɵɵtemplate(5, TaskComponent_mat_header_cell_5_Template, 2, 0, \"mat-header-cell\", 2);\n      i0.ɵɵtemplate(6, TaskComponent_mat_cell_6_Template, 2, 1, \"mat-cell\", 3);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(7, 4);\n      i0.ɵɵtemplate(8, TaskComponent_mat_header_cell_8_Template, 2, 0, \"mat-header-cell\", 2);\n      i0.ɵɵtemplate(9, TaskComponent_mat_cell_9_Template, 2, 1, \"mat-cell\", 3);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(10, 5);\n      i0.ɵɵtemplate(11, TaskComponent_mat_header_cell_11_Template, 2, 0, \"mat-header-cell\", 2);\n      i0.ɵɵtemplate(12, TaskComponent_mat_cell_12_Template, 2, 1, \"mat-cell\", 3);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(13, 6);\n      i0.ɵɵtemplate(14, TaskComponent_mat_header_cell_14_Template, 2, 0, \"mat-header-cell\", 2);\n      i0.ɵɵtemplate(15, TaskComponent_mat_cell_15_Template, 3, 3, \"mat-cell\", 3);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(16, 7);\n      i0.ɵɵtemplate(17, TaskComponent_mat_header_cell_17_Template, 2, 0, \"mat-header-cell\", 2);\n      i0.ɵɵtemplate(18, TaskComponent_mat_cell_18_Template, 2, 1, \"mat-cell\", 3);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(19, 8);\n      i0.ɵɵtemplate(20, TaskComponent_mat_header_cell_20_Template, 2, 0, \"mat-header-cell\", 2);\n      i0.ɵɵtemplate(21, TaskComponent_mat_cell_21_Template, 2, 1, \"mat-cell\", 3);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(22, 9);\n      i0.ɵɵtemplate(23, TaskComponent_mat_header_cell_23_Template, 2, 0, \"mat-header-cell\", 2);\n      i0.ɵɵtemplate(24, TaskComponent_mat_cell_24_Template, 2, 1, \"mat-cell\", 3);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(25, 10);\n      i0.ɵɵtemplate(26, TaskComponent_mat_header_cell_26_Template, 2, 0, \"mat-header-cell\", 2);\n      i0.ɵɵtemplate(27, TaskComponent_mat_cell_27_Template, 5, 0, \"mat-cell\", 3);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(28, TaskComponent_mat_header_row_28_Template, 1, 0, \"mat-header-row\", 11);\n      i0.ɵɵtemplate(29, TaskComponent_mat_row_29_Template, 1, 0, \"mat-row\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(30, TaskComponent_div_30_Template, 31, 6, \"div\", 13);\n      i0.ɵɵtemplate(31, TaskComponent_div_31_Template, 4, 1, \"div\", 13);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.editedTask);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.editedTask);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName, i6.MatButton, i7.MatTable, i7.MatHeaderCellDef, i7.MatHeaderRowDef, i7.MatColumnDef, i7.MatCellDef, i7.MatRowDef, i7.MatHeaderCell, i7.MatCell, i7.MatHeaderRow, i7.MatRow, i8.MatInput, i9.MatFormField, i9.MatLabel, i9.MatSuffix, i4.NgModel, i10.MatDatepicker, i10.MatDatepickerInput, i10.MatDatepickerToggle, i11.MatSelect, i12.MatOption, i13.MatCheckbox, i5.DatePipe],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-around;\\n  flex-wrap: wrap;\\n  margin: 2rem 0;\\n}\\n\\n.form-container[_ngcontent-%COMP%] {\\n  width: 45%;\\n}\\n\\ntable[_ngcontent-%COMP%] {\\n  width: 45%;\\n  border-collapse: collapse;\\n  font-family: Arial, sans-serif;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n}\\n\\ntable[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\n  border: 1px solid #ccc;\\n  padding: 10px;\\n}\\n\\nth[_ngcontent-%COMP%] {\\n  background-color: #f2f2f2;\\n  text-align: left;\\n  font-weight: bold;\\n  text-transform: uppercase;\\n}\\n\\ntr[_ngcontent-%COMP%]:nth-child(even) {\\n  background-color: #f6f6f6;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  background-color: #00cc44;\\n  color: white;\\n  padding: 5px 10px;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n  transition: background-color 0.3s ease;\\n  font-size: 14px;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n  background-color: #00802b;\\n}\\n\\nform[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  margin-bottom: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFzay90YXNrLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsNkJBQTZCO0VBQzdCLGVBQWU7RUFDZixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsVUFBVTtFQUNWLHlCQUF5QjtFQUN6Qiw4QkFBOEI7RUFDOUIsd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLGFBQWE7QUFDZjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLHNDQUFzQztFQUN0QyxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBtYXJnaW46IDJyZW0gMDtcbn1cblxuLmZvcm0tY29udGFpbmVyIHtcbiAgd2lkdGg6IDQ1JTtcbn1cblxudGFibGUge1xuICB3aWR0aDogNDUlO1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG59XG5cbnRhYmxlLCB0aCwgdGQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICBwYWRkaW5nOiAxMHB4O1xufVxuXG50aCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG50cjpudGgtY2hpbGQoZXZlbikge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmNmY2O1xufVxuXG5idXR0b24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBjYzQ0O1xuICBjb2xvcjogd2hpdGU7XG4gIHBhZGRpbmc6IDVweCAxMHB4O1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZTtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuXG5idXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA4MDJiO1xufVxuXG5mb3JtIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxubGFiZWwge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["MatTableDataSource","Validators","i0","TaskComponent","constructor","taskService","userService","projectService","formBuilder","taskForm","group","id","name","required","description","date","assignedUsers","assignedProjects","ngOnInit","getTasks","getUsers","getProjects","users","projects","tasks","dataSource","saveTask","task","value","updateTask","addNewTask","reset","editTask","editedTask","addTask","deleteTask","patchValue","getDisplayUsers","map","user","firstName","lastName","join","getDisplayProjects","project","onTaskStatusChange","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/denisdalipi/Downloads/angular-project/src/app/task/task.component.ts","/Users/denisdalipi/Downloads/angular-project/src/app/task/task.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Task } from \"../model/task\";\nimport { TaskService } from '../task.service';\nimport { UserService } from '../user.service';\nimport { User } from '../model/user';\nimport { Project } from '../model/project';\nimport { ProjectService } from '../project.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {\n  tasks: Task[] = [];\n  dataSource: MatTableDataSource<Task> = new MatTableDataSource<Task>([]);\n  editedTask: Task | null = null;\n\n  users: User[] = [];\n  projects: Project[] = [];\n  displayedColumns: string[] = ['id', 'name', 'description', 'date', 'done', 'users', 'projects', 'actions'];\n  taskForm: FormGroup;\n\n  constructor(private taskService: TaskService, private userService: UserService, private projectService: ProjectService, private formBuilder: FormBuilder ) {\n    this.taskForm = this.formBuilder.group({\n      id: [''],\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      date: ['', Validators.required],\n      assignedUsers: [''],\n      assignedProjects: [''],\n    });\n  }\n\n  async ngOnInit() {\n    this.getTasks();\n    await this.getUsers();\n    await this.getProjects();\n  }\n\n  async getUsers(): Promise<void> {\n    this.users = await this.userService.getUsers();\n  }\n\n  async getProjects(): Promise<void> {\n    this.projects = await this.projectService.getProjects();\n  }\n\n  async getTasks(): Promise<void> {\n   this.tasks = await this.taskService.getTasks();\n   this.dataSource = new MatTableDataSource(this.tasks);\n }\n\n saveTask(): void {\n   const task = this.taskForm.value;\n   if (task.id) {\n     this.taskService.updateTask(task);\n   } else {\n     this.addNewTask(\n       task.name,\n       task.description,\n       task.date,\n       task.assignedUsers,\n       task.assignedProjects\n     );\n   }\n   this.taskForm.reset();\n   this.getTasks();\n }\n\n editTask(task: Task): void {\n   this.editedTask = task;\n }\n\n addNewTask(name: string, description: string, date: Date, assignedUsers: User[], assignedProjects: Project[]): void {\n   this.taskService.addTask(name, description, date, assignedUsers, assignedProjects);\n   this.getTasks();\n }\n\n  deleteTask(task: Task): void {\n    this.taskService.deleteTask(task);\n    this.getTasks();\n  }\n\n  editTask(task: Task): void {\n    this.taskForm.patchValue({ ...task, id: task.id });\n  }\n\n  getDisplayUsers(task: Task): string {\n  return task.assignedUsers\n    ? task.assignedUsers\n        .map(user => `${user.firstName} ${user.lastName}`)\n        .join(', ')\n    : '';\n    }\n\n    getDisplayProjects(task: Task): string {\n      return task.assignedProjects\n        ? task.assignedProjects\n            .map(project => `${project.name}`)\n            .join(', ')\n        : '';\n    }\n\n    onTaskStatusChange(task: Task): void {\n        this.taskService.updateTask(task);\n    }\n\n}\n","\n  <div>\n    <h1>Task Management</h1>\n    <mat-table [dataSource]=\"dataSource\">\n      <ng-container matColumnDef=\"id\">\n        <mat-header-cell *matHeaderCellDef>ID</mat-header-cell>\n        <mat-cell *matCellDef=\"let task\">{{ task.id }}</mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"name\">\n        <mat-header-cell *matHeaderCellDef>Name</mat-header-cell>\n        <mat-cell *matCellDef=\"let task\">{{ task.name }}</mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"description\">\n        <mat-header-cell *matHeaderCellDef>Description</mat-header-cell>\n        <mat-cell *matCellDef=\"let task\">{{ task.description }}</mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"date\">\n        <mat-header-cell *matHeaderCellDef>Date</mat-header-cell>\n        <mat-cell *matCellDef=\"let task\">{{ task.date | date }}</mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"done\">\n          <mat-header-cell *matHeaderCellDef>Done</mat-header-cell>\n          <mat-cell *matCellDef=\"let task\">\n              <mat-checkbox [(ngModel)]=\"task.isDone\" (change)=\"onTaskStatusChange(task)\"></mat-checkbox>\n          </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"users\">\n          <mat-header-cell *matHeaderCellDef>Users</mat-header-cell>\n          <mat-cell *matCellDef=\"let task\">{{ getDisplayUsers(task) }}</mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"projects\">\n          <mat-header-cell *matHeaderCellDef>Projects</mat-header-cell>\n          <mat-cell *matCellDef=\"let task\">{{ getDisplayProjects(task) }}</mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"actions\">\n        <mat-header-cell *matHeaderCellDef>Actions</mat-header-cell>\n        <mat-cell *matCellDef=\"let task\">\n            <button mat-raised-button color=\"primary\" (click)=\"editTask(task)\">Edit</button>\n            <button mat-raised-button color=\"warn\" (click)=\"deleteTask(task)\">Delete</button>\n        </mat-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n    </mat-table>\n  </div>\n\n<div *ngIf=\"!editedTask\">\n  <h2>Add Task</h2>\n  <form [formGroup]=\"taskForm\">\n    <mat-form-field>\n      <mat-label>Name</mat-label>\n      <input matInput formControlName=\"name\" placeholder=\"Name\" required />\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Description</mat-label>\n      <input matInput formControlName=\"description\" placeholder=\"Description\" required />\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Date</mat-label>\n      <input\n        matInput\n        formControlName=\"date\"\n        [matDatepicker]=\"picker\"\n        placeholder=\"Date\"\n        required\n      />\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Assign users</mat-label>\n      <mat-select formControlName=\"assignedUsers\" multiple>\n          <mat-option *ngFor=\"let user of users\" [value]=\"user\">{{ user.firstName }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Assign projects</mat-label>\n        <mat-select formControlName=\"assignedProjects\" multiple>\n          <mat-option *ngFor=\"let project of projects\" [value]=\"project\">{{ project.name }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <button mat-raised-button color=\"primary\" (click)=\"saveTask()\" [disabled]=\"taskForm.invalid\">Save</button>\n    </form>\n  </div>\n  <div *ngIf=\"editedTask\">\n    <h2>Edit Task</h2>\n    <form [formGroup]=\"taskForm\" *ngIf=\"editedTask\">\n  <mat-form-field>\n    <mat-label>Name</mat-label>\n    <input matInput formControlName=\"name\" placeholder=\"Name\" required />\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Description</mat-label>\n    <input matInput formControlName=\"description\" placeholder=\"Description\" required />\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Date</mat-label>\n    <input\n      matInput\n      formControlName=\"date\"\n      [matDatepicker]=\"picker\"\n      placeholder=\"Date\"\n      required\n    />\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n    <mat-datepicker #picker></mat-datepicker>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Assign users</mat-label>\n    <mat-select [(ngModel)]=\"editedTask.assignedUsers\" multiple>\n        <mat-option *ngFor=\"let user of users\" [value]=\"user\">{{ user.firstName }}</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Assign projects</mat-label>\n    <mat-select [(ngModel)]=\"editedTask.assignedProjects\" multiple>\n      <mat-option *ngFor=\"let project of projects\" [value]=\"project\">{{ project.name }}</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <button mat-raised-button color=\"primary\" (click)=\"updateTask()\" [disabled]=\"taskForm.invalid\">Update</button>\n  <button mat-raised-button color=\"accent\" (click)=\"cancelEditing()\">Cancel</button>\n</form>\n\n  </div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}