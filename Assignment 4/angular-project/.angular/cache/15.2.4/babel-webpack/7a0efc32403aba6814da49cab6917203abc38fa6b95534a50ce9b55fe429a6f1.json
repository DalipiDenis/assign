{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nlet TaskComponent = class TaskComponent {\n  constructor(taskService, userService, projectService, formBuilder) {\n    this.taskService = taskService;\n    this.userService = userService;\n    this.projectService = projectService;\n    this.formBuilder = formBuilder;\n    this.tasks = [];\n    this.users = [];\n    this.projects = [];\n    this.selectedTask = {};\n    this.displayedColumns = ['id', 'name', 'description', 'date', 'isDone', 'assignedUsers', 'assignedProjects', 'actions'];\n    this.taskForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      date: ['', Validators.required],\n      assignedUsers: [''],\n      assignedProjects: ['']\n    });\n  }\n  ngOnInit() {\n    this.getTasks();\n    this.getUsers();\n    this.getProjects();\n  }\n  getUsers() {\n    this.users = this.userService.getUsers();\n  }\n  getProjects() {\n    this.projects = this.projectService.getProjects();\n  }\n  addTask(name, description, date, assignedUsers, assignedProjects) {\n    this.taskService.addTask(name, description, date, assignedUsers, assignedProjects);\n    this.getTasks();\n  }\n  deleteTask(task) {\n    this.tasks = this.tasks.filter(u => u !== task);\n    this.taskService.deleteTask(task);\n  }\n  openEditDialog(task) {\n    this.selectedTask = {\n      ...task\n    };\n  }\n  editTask(task) {\n    this.selectedTask = {\n      ...task\n    };\n  }\n  getTasks() {\n    this.tasks = this.taskService.getTasks();\n    this.dataSource = new MatTableDataSource(this.tasks); // Add this line\n  }\n\n  saveTask() {\n    const task = this.taskForm.value;\n    const index = this.tasks.findIndex(t => t.id === task.id);\n    if (index >= 0) {\n      this.tasks[index] = task;\n      this.taskService.updateTask(task);\n    } else {\n      this.addTask(task.name, task.description, task.date, task.assignedUsers, task.assignedProjects);\n    }\n    this.taskForm.reset();\n  }\n  updateTask(task) {\n    const index = this.tasks.findIndex(t => t.id === task.id);\n    if (index >= 0) {\n      this.tasks[index] = task;\n    }\n  }\n};\nTaskComponent = __decorate([Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})], TaskComponent);\nexport { TaskComponent };","map":{"version":3,"mappings":"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","names":["Component","MatTableDataSource","TaskComponent","constructor","taskService","userService","projectService","formBuilder","taskForm","group","name","Validators","required","description","date","assignedUsers","assignedProjects","ngOnInit","getTasks","getUsers","getProjects","users","projects","addTask","deleteTask","task","tasks","filter","u","openEditDialog","selectedTask","editTask","dataSource","saveTask","value","index","findIndex","t","id","updateTask","reset","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/denisdalipi/Downloads/angular-project/src/app/task/task.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Task } from \"../model/task\";\nimport { TaskService } from '../task.service';\nimport { UserService } from '../user.service';\nimport { User } from '../model/user';\nimport { Project } from '../model/project';\nimport { ProjectService } from '../project.service';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {\n  tasks: Task[] = [];\n  dataSource: MatTableDataSource<Task>;\n\n  users: User[] = [];\n  projects: Project[] = [];\n  selectedTask: Task = {} as Task;\n  displayedColumns: string[] = ['id', 'name', 'description', 'date', 'isDone', 'assignedUsers', 'assignedProjects', 'actions'];\n  taskForm: FormGroup;\n\n  constructor(private taskService: TaskService, private userService: UserService, private projectService: ProjectService, private formBuilder: FormBuilder ) {\n      this.taskForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      date: ['', Validators.required],\n      assignedUsers: [''],\n      assignedProjects: [''],\n    });\n  }\n\n  ngOnInit() {\n    this.getTasks();\n    this.getUsers();\n    this.getProjects();\n  }\n\n\n  getUsers(): void {\n    this.users = this.userService.getUsers();\n  }\n\n  getProjects(): void {\n    this.projects = this.projectService.getProjects();\n  }\n\n  addTask(name: string, description: string, date: Date, assignedUsers: User[], assignedProjects: Project[]): void {\n  this.taskService.addTask(name, description, date, assignedUsers, assignedProjects);\n  this.getTasks();\n}\n\n\n  deleteTask(task: Task): void {\n    this.tasks = this.tasks.filter(u => u !== task);\n    this.taskService.deleteTask(task);\n  }\n\n  openEditDialog(task: Task): void {\n    this.selectedTask = { ...task };\n  }\n\n  editTask(task: Task): void {\n  this.selectedTask = { ...task };\n}\ngetTasks(): void {\n   this.tasks = this.taskService.getTasks();\n   this.dataSource = new MatTableDataSource(this.tasks); // Add this line\n }\n\n\nsaveTask(): void {\n  const task = this.taskForm.value;\n  const index = this.tasks.findIndex((t) => t.id === task.id);\n  if (index >= 0) {\n    this.tasks[index] = task;\n    this.taskService.updateTask(task);\n  } else {\n    this.addTask(\n      task.name,\n      task.description,\n      task.date,\n      task.assignedUsers,\n      task.assignedProjects\n    );\n  }\n  this.taskForm.reset();\n}\n\n\nupdateTask(task: Task): void {\nconst index = this.tasks.findIndex(t => t.id === task.id);\nif (index >= 0) {\nthis.tasks[index] = task;\n}\n}\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}