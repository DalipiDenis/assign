{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../team.service\";\nimport * as i2 from \"../task.service\";\nimport * as i3 from \"../user.service\";\nimport * as i4 from \"../project.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nfunction TeamComponent_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", user_r5.firstName, \" \", user_r5.lastName, \"\");\n  }\n}\nfunction TeamComponent_tr_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function TeamComponent_tr_32_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deleteTeam(ctx_r7.team));\n    });\n    i0.ɵɵtext(9, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r6.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r6.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r6.description);\n  }\n}\nexport class TeamComponent {\n  constructor(teamService, taskService, userService, projectService) {\n    this.teamService = teamService;\n    this.taskService = taskService;\n    this.userService = userService;\n    this.projectService = projectService;\n    this.teams = [];\n    this.tasks = [];\n    this.users = [];\n    this.projects = [];\n  }\n  ngOnInit() {\n    this.getTeams();\n    this.getTasks();\n    this.getUsers();\n    this.getProjects();\n  }\n  getTeams() {\n    this.teams = this.teamService.getTeams();\n  }\n  getTasks() {\n    this.tasks = this.taskService.getTasks();\n  }\n  getUsers() {\n    this.users = this.userService.getUsers();\n  }\n  getProjects() {\n    this.projects = this.projectService.getProjects();\n  }\n  addTeam(name, description, administrator) {\n    name = name.trim();\n    description = description.trim();\n    if (!name || !description) {\n      return;\n    }\n    this.teamService.addTeam(name, description, administrator);\n    this.getTeams();\n  }\n  deleteTeam(team) {\n    this.teams = this.teams.filter(u => u !== team);\n    this.teamService.deleteTeam(team);\n  }\n}\nTeamComponent.ɵfac = function TeamComponent_Factory(t) {\n  return new (t || TeamComponent)(i0.ɵɵdirectiveInject(i1.TeamService), i0.ɵɵdirectiveInject(i2.TaskService), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.ProjectService));\n};\nTeamComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TeamComponent,\n  selectors: [[\"app-team\"]],\n  decls: 33,\n  vars: 2,\n  consts: [[\"type\", \"text\", \"name\", \"name\", \"required\", \"\"], [\"name\", \"\"], [\"type\", \"text\", \"name\", \"description\", \"required\", \"\"], [\"description\", \"\"], [\"administrator\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function TeamComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r9 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2, \"Add Team\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\")(4, \"label\");\n      i0.ɵɵtext(5, \" Name: \");\n      i0.ɵɵelement(6, \"input\", 0, 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"label\");\n      i0.ɵɵtext(9, \" Description: \");\n      i0.ɵɵelement(10, \"input\", 2, 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"label\");\n      i0.ɵɵtext(13, \" Assign administrator : \");\n      i0.ɵɵelementStart(14, \"select\", null, 4);\n      i0.ɵɵtemplate(16, TeamComponent_option_16_Template, 2, 3, \"option\", 5);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function TeamComponent_Template_button_click_17_listener() {\n        i0.ɵɵrestoreView(_r9);\n        const _r0 = i0.ɵɵreference(7);\n        const _r1 = i0.ɵɵreference(11);\n        ctx.addTeam(_r0.value, _r1.value, ctx.users);\n        _r0.value = \"\";\n        return i0.ɵɵresetView(_r1.value = \"\");\n      });\n      i0.ɵɵtext(18, \"Add\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\")(20, \"h2\");\n      i0.ɵɵtext(21, \"Team List:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"table\")(23, \"thead\")(24, \"tr\")(25, \"th\");\n      i0.ɵɵtext(26, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"th\");\n      i0.ɵɵtext(28, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"th\");\n      i0.ɵɵtext(30, \"Description\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(31, \"tbody\");\n      i0.ɵɵtemplate(32, TeamComponent_tr_32_Template, 10, 3, \"tr\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.users);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n    }\n  },\n  dependencies: [i5.NgForOf, i6.ɵNgNoValidate, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.NgControlStatusGroup, i6.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","TeamComponent","constructor","teamService","taskService","userService","projectService","ngOnInit","getTeams","getTasks","getUsers","getProjects","teams","tasks","users","projects","addTeam","name","description","administrator","trim","deleteTeam","team","filter","u","selectors","decls","vars","consts","template","ctx","_r0"],"sourceRoot":"","sources":["/Users/denisdalipi/Downloads/angular-project/src/app/team/team.component.html","/Users/denisdalipi/Downloads/angular-project/src/app/team/team.component.ts"],"sourcesContent":["<div>\n  <h2>Add Team</h2>\n  <form>\n    <label>\n      Name:\n      <input #name type=\"text\" name=\"name\" required>\n    </label>\n    <label>\n      Description:\n      <input #description type=\"text\" name=\"description\" required>\n    </label>\n    <label>\n     Assign administrator :\n        <select #administrator >\n            <option *ngFor=\"let user of users\" [value]=\"user\">{{ user.firstName }} {{ user.lastName }}</option>\n        </select>\n    </label>\n  </form>\n  <button (click)=\"addTeam(name.value, description.value, users); name.value=''; description.value=''\">Add</button>\n</div>\n<div>\n  <h2>Team List:</h2>\n  <table>\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let task of tasks\">\n        <td>{{ task.id }}</td>\n        <td>{{ task.name }}</td>\n        <td>{{ task.description }}</td>\n        <td><button (click)=\"deleteTeam(team)\">Delete</button></td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import { Component } from '@angular/core';\nimport { Task } from \"../model/task\";\nimport { TaskService } from '../task.service';\nimport { UserService } from '../user.service';\nimport { User } from '../model/user';\nimport { Project } from '../model/project';\nimport { ProjectService } from '../project.service';\nimport { Team } from '../model/team';\nimport { TeamService } from '../team.service';\n\n@Component({\n  selector: 'app-team',\n  templateUrl: './team.component.html',\n  styleUrls: ['./team.component.css']\n})\nexport class TeamComponent {\n    teams: Team[] = [];\n    tasks: Task[] = [];\n    users: User[] = [];\n    projects: Project[] = [];\n\n    constructor(private teamService: TeamService, private taskService: TaskService, private userService: UserService, private projectService: ProjectService) {}\n\n    ngOnInit() {\n      this.getTeams();\n      this.getTasks();\n      this.getUsers();\n      this.getProjects();\n    }\n\n    getTeams(): void {\n      this.teams = this.teamService.getTeams();\n    }\n\n    getTasks(): void {\n      this.tasks = this.taskService.getTasks();\n    }\n\n    getUsers(): void {\n      this.users = this.userService.getUsers();\n    }\n\n    getProjects(): void {\n      this.projects = this.projectService.getProjects();\n    }\n\n    addTeam(name: string, description: string, administrator: User): void {\n      name = name.trim();\n      description = description.trim();\n      if (!name || !description) {\n        return;\n      }\n      this.teamService.addTeam(name, description, administrator);\n      this.getTeams();\n    }\n\n    deleteTeam(team: Team): void {\n      this.teams = this.teams.filter(u => u !== team);\n      this.teamService.deleteTeam(team);\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}