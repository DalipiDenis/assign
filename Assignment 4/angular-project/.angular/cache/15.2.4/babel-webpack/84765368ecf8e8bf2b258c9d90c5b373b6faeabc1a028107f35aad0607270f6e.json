{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet TeamComponent = class TeamComponent {\n  constructor(teamService, taskService, userService, projectService) {\n    this.teamService = teamService;\n    this.taskService = taskService;\n    this.userService = userService;\n    this.projectService = projectService;\n    this.teams = [];\n    this.tasks = [];\n    this.users = [];\n    this.projects = [];\n  }\n  ngOnInit() {\n    this.getTeams();\n    this.getTasks();\n    this.getUsers();\n    this.getProjects();\n  }\n  getTeams() {\n    this.teams = this.teamService.getTeams();\n  }\n  getTasks() {\n    this.tasks = this.taskService.getTasks();\n  }\n  getUsers() {\n    this.users = this.userService.getUsers();\n  }\n  getProjects() {\n    this.projects = this.projectService.getProjects();\n  }\n  addTeam(name, description, dateString, assignedUsers, assignedProjects) {\n    name = name.trim();\n    description = description.trim();\n    if (!name || !description || !dateString) {\n      return;\n    }\n    const dateParts = dateString.split('/');\n    const date = new Date(parseInt(dateParts[2]), parseInt(dateParts[1]) - 1, parseInt(dateParts[0]));\n    this.taskService.addTask(name, description, date, assignedUsers, assignedProjects);\n    this.getTasks();\n  }\n  deleteTeam(team) {\n    this.teams = this.teams.filter(u => u !== team);\n    this.teamService.deleteTeam(team);\n  }\n};\nTeamComponent = __decorate([Component({\n  selector: 'app-team',\n  templateUrl: './team.component.html',\n  styleUrls: ['./team.component.css']\n})], TeamComponent);\nexport { TeamComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAalC,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAMtBC,YAAoBC,WAAwB,EAAUC,WAAwB,EAAUC,WAAwB,EAAUC,cAA8B;IAApI,gBAAW,GAAXH,WAAW;IAAuB,gBAAW,GAAXC,WAAW;IAAuB,gBAAW,GAAXC,WAAW;IAAuB,mBAAc,GAAdC,cAAc;IALxI,UAAK,GAAW,EAAE;IAClB,UAAK,GAAW,EAAE;IAClB,UAAK,GAAW,EAAE;IAClB,aAAQ,GAAc,EAAE;EAEmI;EAE3JC,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAH,QAAQ;IACN,IAAI,CAACI,KAAK,GAAG,IAAI,CAACT,WAAW,CAACK,QAAQ,EAAE;EAC1C;EAEAC,QAAQ;IACN,IAAI,CAACI,KAAK,GAAG,IAAI,CAACT,WAAW,CAACK,QAAQ,EAAE;EAC1C;EAEAC,QAAQ;IACN,IAAI,CAACI,KAAK,GAAG,IAAI,CAACT,WAAW,CAACK,QAAQ,EAAE;EAC1C;EAEAC,WAAW;IACT,IAAI,CAACI,QAAQ,GAAG,IAAI,CAACT,cAAc,CAACK,WAAW,EAAE;EACnD;EAEAK,OAAO,CAACC,IAAY,EAAEC,WAAmB,EAAEC,UAAkB,EAAEC,aAAqB,EAAEC,gBAA2B;IAC/GJ,IAAI,GAAGA,IAAI,CAACK,IAAI,EAAE;IAClBJ,WAAW,GAAGA,WAAW,CAACI,IAAI,EAAE;IAChC,IAAI,CAACL,IAAI,IAAI,CAACC,WAAW,IAAI,CAACC,UAAU,EAAE;MACxC;;IAEF,MAAMI,SAAS,GAAGJ,UAAU,CAACK,KAAK,CAAC,GAAG,CAAC;IACvC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACC,QAAQ,CAACJ,SAAS,CAAC,CAAC,CAAC,CAAC,EAAEI,QAAQ,CAACJ,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAEI,QAAQ,CAACJ,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IACjG,IAAI,CAACnB,WAAW,CAACwB,OAAO,CAACX,IAAI,EAAEC,WAAW,EAAEO,IAAI,EAAEL,aAAa,EAAEC,gBAAgB,CAAC;IAClF,IAAI,CAACZ,QAAQ,EAAE;EACjB;EAEAoB,UAAU,CAACC,IAAU;IACnB,IAAI,CAAClB,KAAK,GAAG,IAAI,CAACA,KAAK,CAACmB,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKF,IAAI,CAAC;IAC/C,IAAI,CAAC3B,WAAW,CAAC0B,UAAU,CAACC,IAAI,CAAC;EACnC;CACH;AA/CY7B,aAAa,eALzBD,SAAS,CAAC;EACTiC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GACWlC,aAAa,CA+CzB;SA/CYA,aAAa","names":["Component","TeamComponent","constructor","teamService","taskService","userService","projectService","ngOnInit","getTeams","getTasks","getUsers","getProjects","teams","tasks","users","projects","addTeam","name","description","dateString","assignedUsers","assignedProjects","trim","dateParts","split","date","Date","parseInt","addTask","deleteTeam","team","filter","u","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/denisdalipi/Downloads/angular-project/src/app/team/team.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Task } from \"../model/task\";\nimport { TaskService } from '../task.service';\nimport { UserService } from '../user.service';\nimport { User } from '../model/user';\nimport { Project } from '../model/project';\nimport { ProjectService } from '../project.service';\n\n@Component({\n  selector: 'app-team',\n  templateUrl: './team.component.html',\n  styleUrls: ['./team.component.css']\n})\nexport class TeamComponent {\n    teams: Team[] = [];\n    tasks: Task[] = [];\n    users: User[] = [];\n    projects: Project[] = [];\n\n    constructor(private teamService: TeamService, private taskService: TaskService, private userService: UserService, private projectService: ProjectService) {}\n\n    ngOnInit() {\n      this.getTeams();\n      this.getTasks();\n      this.getUsers();\n      this.getProjects();\n    }\n\n    getTeams(): void {\n      this.teams = this.teamService.getTeams();\n    }\n\n    getTasks(): void {\n      this.tasks = this.taskService.getTasks();\n    }\n\n    getUsers(): void {\n      this.users = this.userService.getUsers();\n    }\n\n    getProjects(): void {\n      this.projects = this.projectService.getProjects();\n    }\n\n    addTeam(name: string, description: string, dateString: string, assignedUsers: User[], assignedProjects: Project[]): void {\n      name = name.trim();\n      description = description.trim();\n      if (!name || !description || !dateString) {\n        return;\n      }\n      const dateParts = dateString.split('/');\n      const date = new Date(parseInt(dateParts[2]), parseInt(dateParts[1]) - 1, parseInt(dateParts[0]));\n      this.taskService.addTask(name, description, date, assignedUsers, assignedProjects);\n      this.getTasks();\n    }\n\n    deleteTeam(team: Team): void {\n      this.teams = this.teams.filter(u => u !== team);\n      this.teamService.deleteTeam(team);\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}