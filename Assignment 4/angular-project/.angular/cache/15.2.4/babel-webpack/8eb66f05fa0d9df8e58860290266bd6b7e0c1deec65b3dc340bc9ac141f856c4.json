{"ast":null,"code":"import _asyncToGenerator from \"/Users/denisdalipi/Downloads/angular-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./task.service\";\nimport * as i2 from \"./user.service\";\nimport * as i3 from \"./project.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"./nav/nav.component\";\nexport class AppComponent {\n  constructor(taskService, userService, projectService) {\n    this.taskService = taskService;\n    this.userService = userService;\n    this.projectService = projectService;\n    this.title = \"Master Task Manager\";\n    this.tasks = [];\n    this.assignedUsers = [];\n    this.assignedProjects = [];\n    this.initData();\n  }\n  initData() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.tasks = yield _this.taskService.getTasks();\n      _this.assignedUsers = yield _this.userService.getUsers();\n      _this.assignedProjects = yield _this.projectService.getProjects();\n    })();\n  }\n  addUser(firstName, lastName, username, email, password) {\n    this.userService.addUser(firstName, lastName, username, email, password);\n    this.userService.getUsers().then(users => this.assignedUsers = users);\n  }\n  removeUser(user) {\n    this.userService.deleteUser(user);\n    this.userService.getUsers().then(users => this.assignedUsers = users);\n  }\n  addProject(name, description) {\n    this.projectService.addProject(name, description);\n    this.projectService.getProjects().then(projects => this.assignedProjects = projects);\n  }\n  removeProject(project) {\n    this.projectService.deleteProject(project);\n    this.projectService.getProjects().then(projects => this.assignedProjects = projects);\n  }\n  addTask(name, description, date, assignedUsers) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      yield _this2.taskService.addTask(name, description, date);\n      _this2.tasks = yield _this2.taskService.getTasks();\n    })();\n  }\n  removeTask(task) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      yield _this3.taskService.deleteTask(task);\n      _this3.tasks = yield _this3.taskService.getTasks();\n    })();\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.ProjectService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 11,\n  vars: 0,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"utf-8\"], [\"href\", \"/\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1\"], [\"rel\", \"icon\", \"type\", \"image/x-icon\", \"href\", \"favicon.ico\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1);\n      i0.ɵɵelementStart(3, \"title\");\n      i0.ɵɵtext(4, \"My App\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"base\", 2)(6, \"meta\", 3)(7, \"link\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"body\");\n      i0.ɵɵelement(9, \"app-nav\")(10, \"router-outlet\");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  dependencies: [i4.RouterOutlet, i5.NavComponent],\n  styles: [\"body[_ngcontent-%COMP%] {\\n  font-family: Arial, sans-serif;\\n  margin: 0;\\n  padding: 0;\\n  background-color: #f2f2f2;\\n}\\n\\nheader[_ngcontent-%COMP%] {\\n  background-color: #333;\\n  color: #fff;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  padding: 10px;\\n}\\n\\nnav[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%] {\\n  list-style-type: none;\\n  margin: 0;\\n  padding: 0;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\nnav[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n  margin-right: 10px;\\n}\\n\\nnav[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  color: #fff;\\n  text-decoration: none;\\n  padding: 5px;\\n  border-radius: 5px;\\n}\\n\\nnav[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   a.active[_ngcontent-%COMP%] {\\n  background-color: #00cc44;\\n}\\n\\nimg[_ngcontent-%COMP%] {\\n  max-width: 300px;\\n  margin-bottom: 20px;\\n  width: 70px;\\n  height: 70px;\\n  align-self: flex-start;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw4QkFBOEI7RUFDOUIsU0FBUztFQUNULFVBQVU7RUFDVix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxzQkFBc0I7RUFDdEIsV0FBVztFQUNYLGFBQWE7RUFDYiw4QkFBOEI7RUFDOUIsbUJBQW1CO0VBQ25CLGFBQWE7QUFDZjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixTQUFTO0VBQ1QsVUFBVTtFQUNWLGFBQWE7RUFDYiw4QkFBOEI7QUFDaEM7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gscUJBQXFCO0VBQ3JCLFlBQVk7RUFDWixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxZQUFZO0VBQ1osc0JBQXNCO0FBQ3hCIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSB7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO1xufVxuXG5oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xuICBjb2xvcjogI2ZmZjtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nOiAxMHB4O1xufVxuXG5uYXYgdWwge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG5uYXYgdWwgbGkge1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG59XG5cbm5hdiB1bCBsaSBhIHtcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgcGFkZGluZzogNXB4O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG59XG5cbm5hdiB1bCBsaSBhLmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMGNjNDQ7XG59XG5cbmltZyB7XG4gIG1heC13aWR0aDogMzAwcHg7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIHdpZHRoOiA3MHB4O1xuICBoZWlnaHQ6IDcwcHg7XG4gIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;;AAaA,OAAM,MAAOA,YAAY;EAMvBC,YAAoBC,WAAwB,EAAUC,WAAwB,EAAUC,cAA8B;IAAlG,gBAAW,GAAXF,WAAW;IAAuB,gBAAW,GAAXC,WAAW;IAAuB,mBAAc,GAAdC,cAAc;IALtG,UAAK,GAAG,qBAAqB;IAC7B,UAAK,GAAW,EAAE;IAClB,kBAAa,GAAW,EAAE;IAC1B,qBAAgB,GAAc,EAAE;IAG9B,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEMA,QAAQ;IAAA;IAAA;MACZ,KAAI,CAACC,KAAK,SAAS,KAAI,CAACJ,WAAW,CAACK,QAAQ,EAAE;MAC9C,KAAI,CAACC,aAAa,SAAS,KAAI,CAACL,WAAW,CAACM,QAAQ,EAAE;MACtD,KAAI,CAACC,gBAAgB,SAAS,KAAI,CAACN,cAAc,CAACO,WAAW,EAAE;IAAC;EAClE;EAEAC,OAAO,CAACC,SAAiB,EAAEC,QAAgB,EAAEC,QAAgB,EAAEC,KAAa,EAAEC,QAAgB;IAC5F,IAAI,CAACd,WAAW,CAACS,OAAO,CAACC,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,CAAC;IACxE,IAAI,CAACd,WAAW,CAACM,QAAQ,EAAE,CAACS,IAAI,CAACC,KAAK,IAAI,IAAI,CAACX,aAAa,GAAGW,KAAK,CAAC;EACvE;EAEAC,UAAU,CAACC,IAAU;IACnB,IAAI,CAAClB,WAAW,CAACmB,UAAU,CAACD,IAAI,CAAC;IACjC,IAAI,CAAClB,WAAW,CAACM,QAAQ,EAAE,CAACS,IAAI,CAACC,KAAK,IAAI,IAAI,CAACX,aAAa,GAAGW,KAAK,CAAC;EACvE;EAEAI,UAAU,CAACC,IAAY,EAAEC,WAAmB;IAC1C,IAAI,CAACrB,cAAc,CAACmB,UAAU,CAACC,IAAI,EAAEC,WAAW,CAAC;IACjD,IAAI,CAACrB,cAAc,CAACO,WAAW,EAAE,CAACO,IAAI,CAACQ,QAAQ,IAAI,IAAI,CAAChB,gBAAgB,GAAGgB,QAAQ,CAAC;EACtF;EAEAC,aAAa,CAACC,OAAgB;IAC5B,IAAI,CAACxB,cAAc,CAACyB,aAAa,CAACD,OAAO,CAAC;IAC1C,IAAI,CAACxB,cAAc,CAACO,WAAW,EAAE,CAACO,IAAI,CAACQ,QAAQ,IAAI,IAAI,CAAChB,gBAAgB,GAAGgB,QAAQ,CAAC;EACtF;EAEMI,OAAO,CAACN,IAAY,EAAEC,WAAmB,EAAEM,IAAU,EAAEvB,aAAsB;IAAA;IAAA;MACjF,MAAM,MAAI,CAACN,WAAW,CAAC4B,OAAO,CAACN,IAAI,EAAEC,WAAW,EAAEM,IAAI,CAAC;MACvD,MAAI,CAACzB,KAAK,SAAS,MAAI,CAACJ,WAAW,CAACK,QAAQ,EAAE;IAAC;EACjD;EAEMyB,UAAU,CAACC,IAAU;IAAA;IAAA;MACzB,MAAM,MAAI,CAAC/B,WAAW,CAACgC,UAAU,CAACD,IAAI,CAAC;MACvC,MAAI,CAAC3B,KAAK,SAAS,MAAI,CAACJ,WAAW,CAACK,QAAQ,EAAE;IAAC;EACjD;;AA5CWP,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAmC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZzBC,+BAAgB;MAEdA,0BAAsB;MACtBA,6BAAO;MAAAA,sBAAM;MAAAA,iBAAQ;MACrBA,0BAAe;MAGjBA,iBAAO;MACPA,4BAAM;MACJA,0BAAmB;MAErBA,iBAAO","names":["AppComponent","constructor","taskService","userService","projectService","initData","tasks","getTasks","assignedUsers","getUsers","assignedProjects","getProjects","addUser","firstName","lastName","username","email","password","then","users","removeUser","user","deleteUser","addProject","name","description","projects","removeProject","project","deleteProject","addTask","date","removeTask","task","deleteTask","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/denisdalipi/Downloads/angular-project/src/app/app.component.ts","/Users/denisdalipi/Downloads/angular-project/src/app/app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { TaskService } from './task.service';\nimport { Task } from './model/task';\nimport { User } from './model/user';\nimport { Project } from './model/project';\nimport { UserService } from './user.service';\nimport { ProjectService } from './project.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = \"Master Task Manager\";\n  tasks: Task[] = [];\n  assignedUsers: User[] = [];\n  assignedProjects: Project[] = [];\n\n  constructor(private taskService: TaskService, private userService: UserService, private projectService: ProjectService) {\n    this.initData();\n  }\n\n  async initData() {\n    this.tasks = await this.taskService.getTasks();\n    this.assignedUsers = await this.userService.getUsers();\n    this.assignedProjects = await this.projectService.getProjects();\n  }\n\n  addUser(firstName: string, lastName: string, username: string, email: string, password: string) {\n    this.userService.addUser(firstName, lastName, username, email, password);\n    this.userService.getUsers().then(users => this.assignedUsers = users);\n  }\n\n  removeUser(user: User) {\n    this.userService.deleteUser(user);\n    this.userService.getUsers().then(users => this.assignedUsers = users);\n  }\n\n  addProject(name: string, description: string) {\n    this.projectService.addProject(name, description);\n    this.projectService.getProjects().then(projects => this.assignedProjects = projects);\n  }\n\n  removeProject(project: Project) {\n    this.projectService.deleteProject(project);\n    this.projectService.getProjects().then(projects => this.assignedProjects = projects);\n  }\n\n  async addTask(name: string, description: string, date: Date, assignedUsers?: User[]) {\n    await this.taskService.addTask(name, description, date);\n    this.tasks = await this.taskService.getTasks();\n  }\n\n  async removeTask(task: Task) {\n    await this.taskService.deleteTask(task);\n    this.tasks = await this.taskService.getTasks();\n  }\n}\n","<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>My App</title>\n  <base href=\"/\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body>\n  <app-nav></app-nav>\n  <router-outlet></router-outlet>\n</body>\n</html>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}