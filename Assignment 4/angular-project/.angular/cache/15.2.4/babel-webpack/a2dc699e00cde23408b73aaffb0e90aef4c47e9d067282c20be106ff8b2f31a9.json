{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../task.service\";\nimport * as i2 from \"../user.service\";\nimport * as i3 from \"../project.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction TaskComponent_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", user_r8.firstName, \" \", user_r8.lastName, \"\");\n  }\n}\nfunction TaskComponent_option_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r9.firstName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r9.firstName);\n  }\n}\nfunction TaskComponent_tr_51_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r13 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r13);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", user_r13.firstName, \" \", user_r13.lastName, \"\");\n  }\n}\nfunction TaskComponent_tr_51_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r14 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", project_r14);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(project_r14.name);\n  }\n}\nfunction TaskComponent_tr_51_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskComponent_tr_51_Template_input_ngModelChange_8_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const task_r10 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(task_r10.isDone = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\")(13, \"select\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskComponent_tr_51_Template_select_ngModelChange_13_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const task_r10 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(task_r10.assignedUsers = $event);\n    });\n    i0.ɵɵtemplate(14, TaskComponent_tr_51_option_14_Template, 2, 3, \"option\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"td\")(16, \"select\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskComponent_tr_51_Template_select_ngModelChange_16_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const task_r10 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(task_r10.assignedProjects = $event);\n    });\n    i0.ɵɵtemplate(17, TaskComponent_tr_51_option_17_Template, 2, 2, \"option\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"td\")(19, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function TaskComponent_tr_51_Template_button_click_19_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const task_r10 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.deleteTask(task_r10));\n    });\n    i0.ɵɵtext(20, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r10 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r10.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r10.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r10.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", task_r10.isDone);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(11, 9, task_r10.date, \"dd/MM/yyyy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", task_r10.assignedUsers);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.users);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", task_r10.assignedProjects);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.projects);\n  }\n}\nexport class TaskComponent {\n  constructor(taskService, userService, projectService) {\n    this.taskService = taskService;\n    this.userService = userService;\n    this.projectService = projectService;\n    this.tasks = [];\n    this.users = [];\n    this.projects = [];\n  }\n  ngOnInit() {\n    this.getTasks();\n    this.getUsers();\n    this.getProjects();\n  }\n  getTasks() {\n    this.tasks = this.taskService.getTasks();\n  }\n  getUsers() {\n    this.users = this.userService.getUsers();\n  }\n  getProjects() {\n    this.projects = this.projectService.getProjects();\n  }\n  addTask(name, description, dateString, assignedUsers) {\n    name = name.trim();\n    description = description.trim();\n    if (!name || !description || !dateString) {\n      return;\n    }\n    const dateParts = dateString.split('/');\n    const date = new Date(parseInt(dateParts[2]), parseInt(dateParts[1]) - 1, parseInt(dateParts[0]));\n    this.taskService.addTask(name, description, date);\n    this.getTasks();\n  }\n  deleteTask(task) {\n    this.tasks = this.tasks.filter(u => u !== task);\n    this.taskService.deleteTask(task);\n  }\n}\nTaskComponent.ɵfac = function TaskComponent_Factory(t) {\n  return new (t || TaskComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.ProjectService));\n};\nTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskComponent,\n  selectors: [[\"app-task\"]],\n  decls: 52,\n  vars: 3,\n  consts: [[\"type\", \"text\", \"name\", \"name\", \"required\", \"\"], [\"name\", \"\"], [\"type\", \"text\", \"name\", \"description\", \"required\", \"\"], [\"description\", \"\"], [\"type\", \"text\", \"name\", \"date\", \"pattern\", \"(0?[1-9]|[12][0-9]|3[01])/(0?[1-9]|1[012])/\\\\d{4}\", \"placeholder\", \"dd/MM/yyyy\", \"required\", \"\"], [\"date\", \"\"], [\"multiple\", \"\"], [\"assignedUsers\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"addAssignedUsers\"], [\"id\", \"addAssignedUsers\", 1, \"lg-text-input\"], [\"usersSelect\", \"\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngModel\", \"ngModelChange\"]],\n  template: function TaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r20 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2, \"Add Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\")(4, \"label\");\n      i0.ɵɵtext(5, \" Name: \");\n      i0.ɵɵelement(6, \"input\", 0, 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"label\");\n      i0.ɵɵtext(9, \" Description: \");\n      i0.ɵɵelement(10, \"input\", 2, 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"label\");\n      i0.ɵɵtext(13, \" Date: \");\n      i0.ɵɵelement(14, \"input\", 4, 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"label\");\n      i0.ɵɵtext(17, \" Assigned Users: \");\n      i0.ɵɵelementStart(18, \"select\", 6, 7);\n      i0.ɵɵtemplate(20, TaskComponent_option_20_Template, 2, 3, \"option\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"label\", 9);\n      i0.ɵɵtext(22, \"Assigned Users:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"br\");\n      i0.ɵɵelementStart(24, \"select\", 10, 11);\n      i0.ɵɵtemplate(26, TaskComponent_option_26_Template, 2, 2, \"option\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function TaskComponent_Template_button_click_27_listener() {\n        i0.ɵɵrestoreView(_r20);\n        const _r0 = i0.ɵɵreference(7);\n        const _r1 = i0.ɵɵreference(11);\n        const _r2 = i0.ɵɵreference(15);\n        ctx.addTask(_r0.value, _r1.value, _r2.value, ctx.users);\n        _r0.value = \"\";\n        _r1.value = \"\";\n        return i0.ɵɵresetView(_r2.value = \"\");\n      });\n      i0.ɵɵtext(28, \"Add\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"div\")(30, \"h2\");\n      i0.ɵɵtext(31, \"Task List:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"table\")(33, \"thead\")(34, \"tr\")(35, \"th\");\n      i0.ɵɵtext(36, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"th\");\n      i0.ɵɵtext(38, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"th\");\n      i0.ɵɵtext(40, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"th\");\n      i0.ɵɵtext(42, \"Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"th\");\n      i0.ɵɵtext(44, \"Done\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"th\");\n      i0.ɵɵtext(46, \"User\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"th\");\n      i0.ɵɵtext(48, \"Project\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(49, \"th\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(50, \"tbody\");\n      i0.ɵɵtemplate(51, TaskComponent_tr_51_Template, 21, 12, \"tr\", 13);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(20);\n      i0.ɵɵproperty(\"ngForOf\", ctx.users);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.users);\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n    }\n  },\n  dependencies: [i4.NgForOf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.CheckboxControlValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm, i4.DatePipe],\n  styles: [\"div[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  padding: 5px;\\n  margin: 5px;\\n  border: 2px solid #ccc;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  background-color: #4CAF50;\\n  color: white;\\n  padding: 10px;\\n  margin: 5px;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n}\\n\\ntable[_ngcontent-%COMP%] {\\n  border-collapse: collapse;\\n  width: 100%;\\n}\\n\\nth[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\n  text-align: left;\\n  padding: 8px;\\n  border-bottom: 1px solid #ddd;\\n}\\n\\nth[_ngcontent-%COMP%] {\\n  background-color: #4CAF50;\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFzay90YXNrLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixXQUFXO0VBQ1gsc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtFQUNaLGFBQWE7RUFDYixXQUFXO0VBQ1gsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixZQUFZO0VBQ1osNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7QUFDZCIsInNvdXJjZXNDb250ZW50IjpbImRpdiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbmlucHV0IHtcbiAgcGFkZGluZzogNXB4O1xuICBtYXJnaW46IDVweDtcbiAgYm9yZGVyOiAycHggc29saWQgI2NjYztcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5idXR0b24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNENBRjUwO1xuICBjb2xvcjogd2hpdGU7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIG1hcmdpbjogNXB4O1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50aCwgdGQge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBwYWRkaW5nOiA4cHg7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xufVxuXG50aCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0Q0FGNTA7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","TaskComponent","constructor","taskService","userService","projectService","ngOnInit","getTasks","getUsers","getProjects","tasks","users","projects","addTask","name","description","dateString","assignedUsers","trim","dateParts","split","date","Date","parseInt","deleteTask","task","filter","u","selectors","decls","vars","consts","template","ctx","_r0","_r1"],"sourceRoot":"","sources":["/Users/denisdalipi/Downloads/angular-project/src/app/task/task.component.html","/Users/denisdalipi/Downloads/angular-project/src/app/task/task.component.ts"],"sourcesContent":["<div>\n  <h2>Add Task</h2>\n  <form>\n    <label>\n      Name:\n      <input #name type=\"text\" name=\"name\" required>\n    </label>\n    <label>\n      Description:\n      <input #description type=\"text\" name=\"description\" required>\n    </label>\n    <label>\n      Date:\n    <input #date type=\"text\" name=\"date\" pattern=\"(0?[1-9]|[12][0-9]|3[01])/(0?[1-9]|1[012])/\\d{4}\" placeholder=\"dd/MM/yyyy\" required>\n    </label>\n    <label>\n        Assigned Users:\n        <select #assignedUsers multiple>\n            <option *ngFor=\"let user of users\" [value]=\"user\">{{ user.firstName }} {{ user.lastName }}</option>\n        </select>\n    </label>\n    <label for=\"addAssignedUsers\">Assigned Users:</label><br />\n    <select #usersSelect id=\"addAssignedUsers\" class=\"lg-text-input\">\n      <option *ngFor=\"let user of users\" [value]=\"user.firstName\">{{ user.firstName }}</option></select>\n  </form>\n  <button (click)=\"addTask(name.value, description.value, date.value, users); name.value=''; description.value=''; date.value=''\">Add</button>\n</div>\n<div>\n  <h2>Task List:</h2>\n  <table>\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Description</th>\n        <th>Date</th>\n        <th>Done</th>\n        <th>User</th>\n        <th>Project</th>\n        <th></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let task of tasks\">\n        <td>{{ task.id }}</td>\n        <td>{{ task.name }}</td>\n        <td>{{ task.description }}</td>\n        <td><input type=\"checkbox\" [(ngModel)]=\"task.isDone\"></td>\n        <td>{{ task.date | date:'dd/MM/yyyy' }}</td>\n        <td>\n            <select [(ngModel)]=\"task.assignedUsers\">\n            <option *ngFor=\"let user of users\" [value]=\"user\">{{ user.firstName }} {{ user.lastName }}</option>\n            </select>\n        </td>\n        <td>\n            <select [(ngModel)]=\"task.assignedProjects\">\n            <option *ngFor=\"let project of projects\" [value]=\"project\">{{ project.name }}</option>\n            </select>\n        </td>\n        <td><button (click)=\"deleteTask(task)\">Delete</button></td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import { Component } from '@angular/core';\nimport { Task } from \"../model/task\";\nimport { TaskService } from '../task.service';\nimport { UserService } from '../user.service';\nimport { User } from '../model/user';\nimport { Project } from '../model/project';\nimport { ProjectService } from '../project.service';\n\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent {\n  tasks: Task[] = [];\n  users: User[] = [];\n  projects: Project[] = [];\n\n  constructor(private taskService: TaskService, private userService: UserService, private projectService: ProjectService) {}\n\n  ngOnInit() {\n    this.getTasks();\n    this.getUsers();\n    this.getProjects();\n  }\n\n  getTasks(): void {\n    this.tasks = this.taskService.getTasks();\n  }\n\n  getUsers(): void {\n    this.users = this.userService.getUsers();\n  }\n\n  getProjects(): void {\n    this.projects = this.projectService.getProjects();\n  }\n\n  addTask(name: string, description: string, dateString: string, assignedUsers: User[]): void {\n    name = name.trim();\n    description = description.trim();\n    if (!name || !description || !dateString) {\n      return;\n    }\n    const dateParts = dateString.split('/');\n    const date = new Date(parseInt(dateParts[2]), parseInt(dateParts[1]) - 1, parseInt(dateParts[0]));\n    this.taskService.addTask(name, description, date);\n    this.getTasks();\n  }\n\n  deleteTask(task: Task): void {\n    this.tasks = this.tasks.filter(u => u !== task);\n    this.taskService.deleteTask(task);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}