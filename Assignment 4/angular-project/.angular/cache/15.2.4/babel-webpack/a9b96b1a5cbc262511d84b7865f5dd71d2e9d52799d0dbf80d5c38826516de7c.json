{"ast":null,"code":"import _asyncToGenerator from \"/Users/denisdalipi/Downloads/angular-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport Dexie from 'dexie';\nimport * as i0 from \"@angular/core\";\nexport class UserService extends Dexie {\n  constructor() {\n    super('UserServiceDatabase');\n    this.nextId = 1;\n    this.version(1).stores({\n      users: '++id, firstName, lastName, username, email, password'\n    });\n    this.users = this.table('users');\n  }\n  getUsers() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return _this.users.toArray();\n    })();\n  }\n  addUser(firstName, lastName, username, email, password) {\n    const user = {\n      firstName,\n      lastName,\n      username,\n      email,\n      password\n    };\n    this.users.add(user);\n  }\n  deleteUser(user) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      yield _this2.users.delete(user.id);\n    })();\n  }\n  updateUser(updatedUser) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      yield _this3.users.update(updatedUser.id, updatedUser);\n    })();\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)();\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAEA,OAAOA,KAAK,MAAM,OAAO;;AAKzB,OAAM,MAAOC,WAAY,SAAQD,KAAK;EAIpCE;IACE,KAAK,CAAC,qBAAqB,CAAC;IAJtB,WAAM,GAAG,CAAC;IAKhB,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC;MACrBC,KAAK,EAAE;KACR,CAAC;IAEF,IAAI,CAACA,KAAK,GAAG,IAAI,CAACC,KAAK,CAAC,OAAO,CAAC;EAClC;EAEMC,QAAQ;IAAA;IAAA;MACZ,OAAO,KAAI,CAACF,KAAK,CAACG,OAAO,EAAE;IAAC;EAC9B;EAEAC,OAAO,CAACC,SAAiB,EAAEC,QAAgB,EAAEC,QAAgB,EAAEC,KAAa,EAAEC,QAAgB;IAC5F,MAAMC,IAAI,GAAS;MAAEL,SAAS;MAAEC,QAAQ;MAAEC,QAAQ;MAAEC,KAAK;MAAEC;IAAQ,CAAE;IACrE,IAAI,CAACT,KAAK,CAACW,GAAG,CAACD,IAAI,CAAC;EACtB;EAEME,UAAU,CAACF,IAAU;IAAA;IAAA;MACzB,MAAM,MAAI,CAACV,KAAK,CAACa,MAAM,CAACH,IAAI,CAACI,EAAE,CAAC;IAAC;EACnC;EAEMC,UAAU,CAACC,WAAiB;IAAA;IAAA;MAChC,MAAM,MAAI,CAAChB,KAAK,CAACiB,MAAM,CAACD,WAAW,CAACF,EAAE,EAAEE,WAAW,CAAC;IAAC;EACvD;;AA5BWpB,WAAY;mBAAZA,WAAW;AAAA;AAAXA,WAAY;SAAZA,WAAW;EAAAsB,SAAXtB,WAAW;EAAAuB,YAFV;AAAM","names":["Dexie","UserService","constructor","version","stores","users","table","getUsers","toArray","addUser","firstName","lastName","username","email","password","user","add","deleteUser","delete","id","updateUser","updatedUser","update","factory","providedIn"],"sourceRoot":"","sources":["/Users/denisdalipi/Downloads/angular-project/src/app/user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { User } from './model/user';\nimport Dexie from 'dexie';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService extends Dexie {\n  private nextId = 1;\n  users: Dexie.Table<User, number>;\n\n  constructor() {\n    super('UserServiceDatabase');\n    this.version(1).stores({\n      users: '++id, firstName, lastName, username, email, password'\n    });\n\n    this.users = this.table('users');\n  }\n\n  async getUsers(): Promise<User[]> {\n    return this.users.toArray();\n  }\n\n  addUser(firstName: string, lastName: string, username: string, email: string, password: string): void {\n    const user: User = { firstName, lastName, username, email, password };\n    this.users.add(user);\n  }\n\n  async deleteUser(user: User): Promise<void> {\n    await this.users.delete(user.id);\n  }\n\n  async updateUser(updatedUser: User): Promise<void> {\n    await this.users.update(updatedUser.id, updatedUser);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}