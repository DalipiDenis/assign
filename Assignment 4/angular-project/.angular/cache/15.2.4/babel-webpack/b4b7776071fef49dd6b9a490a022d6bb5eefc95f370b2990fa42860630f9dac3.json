{"ast":null,"code":"import _asyncToGenerator from \"/Users/denisdalipi/Downloads/angular-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport Dexie from 'dexie';\nimport * as i0 from \"@angular/core\";\nexport class TeamService extends Dexie {\n  constructor() {\n    super('TeamServiceDatabase');\n    this.nextId = 1;\n    this.version(1).stores({\n      teams: '++id, name, description, members, projectList'\n    });\n    this.teams = this.table('teams');\n  }\n  getTeams() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return _this.teams.toArray();\n    })();\n  }\n  addTeam(name, description, members, projectList) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const team = {\n        name,\n        description,\n        members,\n        projectList\n      };\n      yield _this2.teams.add(team);\n    })();\n  }\n  deleteTeam(team) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      yield _this3.teams.delete(team.id);\n    })();\n  }\n  updateTeam(updatedTeam) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      yield _this4.teams.update(updatedTeam.id, updatedTeam);\n    })();\n  }\n}\nTeamService.ɵfac = function TeamService_Factory(t) {\n  return new (t || TeamService)();\n};\nTeamService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TeamService,\n  factory: TeamService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAIA,OAAOA,KAAK,MAAM,OAAO;;AAKzB,OAAM,MAAOC,WAAY,SAAQD,KAAK;EAIpCE;IACE,KAAK,CAAC,qBAAqB,CAAC;IAJtB,WAAM,GAAG,CAAC;IAKhB,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC;MACrBC,KAAK,EAAE;KACR,CAAC;IAEF,IAAI,CAACA,KAAK,GAAG,IAAI,CAACC,KAAK,CAAC,OAAO,CAAC;EAClC;EAEMC,QAAQ;IAAA;IAAA;MACZ,OAAO,KAAI,CAACF,KAAK,CAACG,OAAO,EAAE;IAAC;EAC9B;EAEMC,OAAO,CAACC,IAAY,EAAEC,WAAmB,EAAEC,OAAe,EAAEC,WAAsB;IAAA;IAAA;MACtF,MAAMC,IAAI,GAAS;QAACJ,IAAI;QAAEC,WAAW;QAAEC,OAAO;QAAEC;MAAW,CAAE;MAC7D,MAAM,MAAI,CAACR,KAAK,CAACU,GAAG,CAACD,IAAI,CAAC;IAAC;EAC7B;EAEME,UAAU,CAACF,IAAU;IAAA;IAAA;MACzB,MAAM,MAAI,CAACT,KAAK,CAACY,MAAM,CAACH,IAAI,CAACI,EAAG,CAAC;IAAC;EACpC;EAEMC,UAAU,CAACC,WAAiB;IAAA;IAAA;MAChC,MAAM,MAAI,CAACf,KAAK,CAACgB,MAAM,CAACD,WAAW,CAACF,EAAG,EAAEE,WAAW,CAAC;IAAC;EACxD;;AA5BWnB,WAAY;mBAAZA,WAAW;AAAA;AAAXA,WAAY;SAAZA,WAAW;EAAAqB,SAAXrB,WAAW;EAAAsB,YAFV;AAAM","names":["Dexie","TeamService","constructor","version","stores","teams","table","getTeams","toArray","addTeam","name","description","members","projectList","team","add","deleteTeam","delete","id","updateTeam","updatedTeam","update","factory","providedIn"],"sourceRoot":"","sources":["/Users/denisdalipi/Downloads/angular-project/src/app/team.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Team } from './model/team';\nimport { User } from './model/user';\nimport { Project } from './model/project';\nimport Dexie from 'dexie';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService extends Dexie {\n  private nextId = 1;\n  teams: Dexie.Table<Team, number>;\n\n  constructor() {\n    super('TeamServiceDatabase');\n    this.version(1).stores({\n      teams: '++id, name, description, members, projectList'\n    });\n\n    this.teams = this.table('teams');\n  }\n\n  async getTeams(): Promise<Team[]> {\n    return this.teams.toArray();\n  }\n\n  async addTeam(name: string, description: string, members: User[], projectList: Project[]): Promise<void> {\n    const team: Team = {name, description, members, projectList };\n    await this.teams.add(team);\n  }\n\n  async deleteTeam(team: Team): Promise<void> {\n    await this.teams.delete(team.id!);\n  }\n\n  async updateTeam(updatedTeam: Team): Promise<void> {\n    await this.teams.update(updatedTeam.id!, updatedTeam);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}