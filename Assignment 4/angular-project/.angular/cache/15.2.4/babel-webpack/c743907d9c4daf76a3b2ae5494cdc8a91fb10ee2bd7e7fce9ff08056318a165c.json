{"ast":null,"code":"import _asyncToGenerator from \"/Users/denisdalipi/Downloads/angular-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport Dexie from 'dexie';\nimport * as i0 from \"@angular/core\";\nexport class ProjectService extends Dexie {\n  constructor() {\n    super('ProjectServiceDatabase');\n    this.nextId = 1;\n    this.version(1).stores({\n      projects: '++id, name, description, action'\n    });\n    this.projects = this.table('projects');\n  }\n  getProjects() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return _this.projects.toArray();\n      ;\n    })();\n  }\n  addProject(name, description) {\n    const project = {\n      id: this.nextId++,\n      name,\n      description\n    };\n    this.projects.push(project);\n  }\n  deleteProject(project) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      yield _this2.projects.delete(user.id);\n    })();\n  }\n  updateProject(id, name, description) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const projectIndex = _this3.projects.findIndex(p => p.id === id);\n      if (projectIndex >= 0) {\n        _this3.projects[projectIndex] = {\n          ..._this3.projects[projectIndex],\n          name,\n          description\n        };\n      }\n    })();\n  }\n}\nProjectService.ɵfac = function ProjectService_Factory(t) {\n  return new (t || ProjectService)();\n};\nProjectService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProjectService,\n  factory: ProjectService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAEA,OAAOA,KAAK,MAAM,OAAO;;AAKzB,OAAM,MAAOC,cAAe,SAAQD,KAAK;EAIvCE;IACE,KAAK,CAAC,wBAAwB,CAAC;IAJzB,WAAM,GAAG,CAAC;IAKhB,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC;MACrBC,QAAQ,EAAE;KACX,CAAC;IAEF,IAAI,CAACA,QAAQ,GAAG,IAAI,CAACC,KAAK,CAAC,UAAU,CAAC;EACxC;EAEMC,WAAW;IAAA;IAAA;MACf,OAAO,KAAI,CAACF,QAAQ,CAACG,OAAO,EAAE;MAAC;IAAC;EAClC;EAEAC,UAAU,CAACC,IAAY,EAAEC,WAAmB;IAC1C,MAAMC,OAAO,GAAY;MAAEC,EAAE,EAAE,IAAI,CAACC,MAAM,EAAE;MAAEJ,IAAI;MAAEC;IAAW,CAAC;IAChE,IAAI,CAACN,QAAQ,CAACU,IAAI,CAACH,OAAO,CAAC;EAC7B;EAEMI,aAAa,CAACJ,OAAgB;IAAA;IAAA;MAClC,MAAM,MAAI,CAACP,QAAQ,CAACY,MAAM,CAACC,IAAI,CAACL,EAAE,CAAC;IAAC;EACtC;EAEMM,aAAa,CAACN,EAAU,EAAEH,IAAY,EAAEC,WAAmB;IAAA;IAAA;MAC/D,MAAMS,YAAY,GAAG,MAAI,CAACf,QAAQ,CAACgB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACT,EAAE,KAAKA,EAAE,CAAC;MAC9D,IAAIO,YAAY,IAAI,CAAC,EAAE;QACrB,MAAI,CAACf,QAAQ,CAACe,YAAY,CAAC,GAAG;UAAE,GAAG,MAAI,CAACf,QAAQ,CAACe,YAAY,CAAC;UAAEV,IAAI;UAAEC;QAAW,CAAE;;IACpF;EACH;;AA/BWV,cAAe;mBAAfA,cAAc;AAAA;AAAdA,cAAe;SAAfA,cAAc;EAAAsB,SAAdtB,cAAc;EAAAuB,YAFb;AAAM","names":["Dexie","ProjectService","constructor","version","stores","projects","table","getProjects","toArray","addProject","name","description","project","id","nextId","push","deleteProject","delete","user","updateProject","projectIndex","findIndex","p","factory","providedIn"],"sourceRoot":"","sources":["/Users/denisdalipi/Downloads/angular-project/src/app/project.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Project } from './model/project';\nimport Dexie from 'dexie';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService extends Dexie {\n  private nextId = 1;\n  projects: Dexie.Table<Project, number>;\n\n  constructor() {\n    super('ProjectServiceDatabase');\n    this.version(1).stores({\n      projects: '++id, name, description, action'\n    });\n\n    this.projects = this.table('projects');\n  }\n\n  async getProjects(): Promise<Project[]> {\n    return this.projects.toArray();;\n  }\n\n  addProject(name: string, description: string) {\n    const project: Project = { id: this.nextId++, name, description};\n    this.projects.push(project);\n  }\n\n  async deleteProject(project: Project): Promise<void> {\n    await this.projects.delete(user.id);\n  }\n\n  async updateProject(id: number, name: string, description: string): Promise<void> {\n    const projectIndex = this.projects.findIndex(p => p.id === id);\n    if (projectIndex >= 0) {\n      this.projects[projectIndex] = { ...this.projects[projectIndex], name, description };\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}