{"ast":null,"code":"import _asyncToGenerator from \"/Users/denisdalipi/Downloads/angular-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { UserService } from './user.service';\nexport function resetDatabase() {\n  return _resetDatabase.apply(this, arguments);\n}\nfunction _resetDatabase() {\n  _resetDatabase = _asyncToGenerator(function* () {\n    if (!(yield shouldResetDatabase())) return;\n    const userServiceDb = new UserService();\n    yield userServiceDb.delete();\n    yield userServiceDb.open();\n  });\n  return _resetDatabase.apply(this, arguments);\n}\nfunction shouldResetDatabase() {\n  return _shouldResetDatabase.apply(this, arguments);\n}\nfunction _shouldResetDatabase() {\n  _shouldResetDatabase = _asyncToGenerator(function* () {\n    try {\n      const response = yield fetch('/assets/config.json');\n      const config = yield response.json();\n      return config.resetDatabaseOnServe;\n    } catch (error) {\n      console.error('Error loading config.json:', error);\n      return false;\n    }\n  });\n  return _shouldResetDatabase.apply(this, arguments);\n}","map":{"version":3,"mappings":";AAAA,SAASA,WAAW,QAAQ,gBAAgB;AAE5C,gBAAsBC,aAAa;EAAA;AAAA;AAKlC;EAAA,mCALM,aAA4B;IACjC,IAAI,QAAQC,mBAAmB,EAAE,CAAC,EAAE;IACpC,MAAMC,aAAa,GAAG,IAAIH,WAAW,EAAE;IACvC,MAAMG,aAAa,CAACC,MAAM,EAAE;IAC5B,MAAMD,aAAa,CAACE,IAAI,EAAE;EAC5B,CAAC;EAAA;AAAA;AAAA,SAEcH,mBAAmB;EAAA;AAAA;AAAA;EAAA,yCAAlC,aAAkC;IAChC,IAAI;MACF,MAAMI,QAAQ,SAASC,KAAK,CAAC,qBAAqB,CAAC;MACnD,MAAMC,MAAM,SAASF,QAAQ,CAACG,IAAI,EAAE;MACpC,OAAOD,MAAM,CAACE,oBAAoB;KACnC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,OAAO,KAAK;;EAEhB,CAAC;EAAA;AAAA","names":["UserService","resetDatabase","shouldResetDatabase","userServiceDb","delete","open","response","fetch","config","json","resetDatabaseOnServe","error","console"],"sourceRoot":"","sources":["/Users/denisdalipi/Downloads/angular-project/src/app/reset-database.ts"],"sourcesContent":["import { UserService } from './user.service';\n\nexport async function resetDatabase() {\n  if (!(await shouldResetDatabase())) return;\n  const userServiceDb = new UserService();\n  await userServiceDb.delete();\n  await userServiceDb.open();\n}\n\nasync function shouldResetDatabase() {\n  try {\n    const response = await fetch('/assets/config.json');\n    const config = await response.json();\n    return config.resetDatabaseOnServe;\n  } catch (error) {\n    console.error('Error loading config.json:', error);\n    return false;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}