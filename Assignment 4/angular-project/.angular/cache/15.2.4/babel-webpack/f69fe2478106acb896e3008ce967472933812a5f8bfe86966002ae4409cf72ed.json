{"ast":null,"code":"import { MatTableDataSource } from '@angular/material/table';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../task.service\";\nimport * as i2 from \"../user.service\";\nimport * as i3 from \"../project.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/table\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/datepicker\";\nimport * as i11 from \"@angular/material/select\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"@angular/material/icon\";\nfunction TaskComponent_mat_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r21 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r21);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r21.firstName);\n  }\n}\nfunction TaskComponent_mat_option_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r22 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", project_r22);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(project_r22.name);\n  }\n}\nfunction TaskComponent_mat_header_cell_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"ID\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskComponent_mat_cell_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r23 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r23.id);\n  }\n}\nfunction TaskComponent_mat_header_cell_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Name\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskComponent_mat_cell_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r24 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r24.name);\n  }\n}\nfunction TaskComponent_mat_header_cell_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Description\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskComponent_mat_cell_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r25 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r25.description);\n  }\n}\nfunction TaskComponent_mat_header_cell_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Date\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskComponent_mat_cell_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r26 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, task_r26.date));\n  }\n}\nfunction TaskComponent_mat_header_cell_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Done\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskComponent_mat_cell_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r27 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r27.done);\n  }\n}\nfunction TaskComponent_mat_header_cell_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Users\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskComponent_mat_cell_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"json\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r28 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, task_r28.assignedUsers));\n  }\n}\nfunction TaskComponent_mat_header_cell_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Projects\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskComponent_mat_cell_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"json\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r29 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, task_r29.assignedProjects));\n  }\n}\nfunction TaskComponent_mat_header_cell_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Actions\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskComponent_mat_cell_58_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-cell\")(1, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function TaskComponent_mat_cell_58_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r32);\n      const task_r30 = restoredCtx.$implicit;\n      const ctx_r31 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r31.editTask(task_r30));\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function TaskComponent_mat_cell_58_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r32);\n      const task_r30 = restoredCtx.$implicit;\n      const ctx_r33 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r33.deleteTask(task_r30));\n    });\n    i0.ɵɵelementStart(5, \"mat-icon\");\n    i0.ɵɵtext(6, \"delete\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction TaskComponent_mat_header_row_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-header-row\");\n  }\n}\nfunction TaskComponent_mat_row_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-row\");\n  }\n}\nexport class TaskComponent {\n  constructor(taskService, userService, projectService, formBuilder) {\n    this.taskService = taskService;\n    this.userService = userService;\n    this.projectService = projectService;\n    this.formBuilder = formBuilder;\n    this.displayedColumns = ['name', 'description', 'date', 'assignedUsers', 'assignedProjects', 'actions'];\n    this.tasks = [];\n    this.users = [];\n    this.projects = [];\n    this.selectedTask = {};\n    this.taskForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      date: ['', Validators.required],\n      assignedUsers: [''],\n      assignedProjects: ['']\n    });\n    this.dataSource = new MatTableDataSource([]); // Add this line\n  }\n\n  ngOnInit() {\n    this.getTasks();\n    this.getUsers();\n    this.getProjects();\n  }\n  getUsers() {\n    this.users = this.userService.getUsers();\n  }\n  getProjects() {\n    this.projects = this.projectService.getProjects();\n  }\n  getTasks() {\n    this.tasks = this.taskService.getTasks();\n    this.dataSource = new MatTableDataSource(this.tasks);\n  }\n  addNewTask(name, description, date, assignedUsers, assignedProjects, isDone) {\n    this.taskService.addTask({\n      name,\n      description,\n      date,\n      assignedUsers,\n      assignedProjects,\n      isDone\n    });\n    this.getTasks();\n  }\n  saveTask() {\n    const task = this.taskForm.value;\n    if (this.selectedTask && this.selectedTask.id) {\n      task.id = this.selectedTask.id;\n      this.updateTask(task);\n    } else {\n      this.addNewTask(task.name, task.description, task.date, task.assignedUsers, task.assignedProjects, false);\n    }\n    this.selectedTask = {};\n    this.taskForm.reset();\n  }\n  addTask(name, description, date, assignedUsers, assignedProjects) {\n    const task = {\n      id: this.tasks.length + 1,\n      name,\n      description,\n      date,\n      assignedUsers,\n      assignedProjects,\n      isDone: false\n    };\n    this.tasks.push(task);\n  }\n  updateTask(task) {\n    const index = this.tasks.findIndex(t => t.id === task.id);\n    if (index !== -1) {\n      this.tasks[index] = task;\n      this.dataSource.data = this.tasks;\n    }\n  }\n  deleteTask(task) {\n    this.taskService.deleteTask(task);\n    this.getTasks();\n  }\n  editTask(task) {\n    this.taskForm.patchValue(task);\n  }\n}\nTaskComponent.ɵfac = function TaskComponent_Factory(t) {\n  return new (t || TaskComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.ProjectService), i0.ɵɵdirectiveInject(i4.FormBuilder));\n};\nTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskComponent,\n  selectors: [[\"app-task\"]],\n  decls: 61,\n  vars: 9,\n  consts: [[3, \"formGroup\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"placeholder\", \"Name\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"description\", \"placeholder\", \"Description\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"date\", \"placeholder\", \"Date\", \"required\", \"\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [\"formControlName\", \"assignedUsers\", \"multiple\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"assignedProjects\", \"multiple\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [3, \"dataSource\"], [\"matColumnDef\", \"id\"], [4, \"matHeaderCellDef\"], [4, \"matCellDef\"], [\"matColumnDef\", \"name\"], [\"matColumnDef\", \"description\"], [\"matColumnDef\", \"date\"], [\"matColumnDef\", \"done\"], [\"matColumnDef\", \"users\"], [\"matColumnDef\", \"projects\"], [\"matColumnDef\", \"actions\"], [4, \"matHeaderRowDef\"], [4, \"matRowDef\", \"matRowDefColumns\"], [3, \"value\"], [\"mat-icon-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-icon-button\", \"\", \"color\", \"warn\", 3, \"click\"]],\n  template: function TaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2, \"Add/Edit Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 0)(4, \"mat-form-field\")(5, \"mat-label\");\n      i0.ɵɵtext(6, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-form-field\")(9, \"mat-label\");\n      i0.ɵɵtext(10, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"mat-form-field\")(13, \"mat-label\");\n      i0.ɵɵtext(14, \"Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 3)(16, \"mat-datepicker-toggle\", 4)(17, \"mat-datepicker\", null, 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"mat-form-field\")(20, \"mat-label\");\n      i0.ɵɵtext(21, \"Assign users\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"mat-select\", 6);\n      i0.ɵɵtemplate(23, TaskComponent_mat_option_23_Template, 2, 2, \"mat-option\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"mat-form-field\")(25, \"mat-label\");\n      i0.ɵɵtext(26, \"Assign projects\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"mat-select\", 8);\n      i0.ɵɵtemplate(28, TaskComponent_mat_option_28_Template, 2, 2, \"mat-option\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function TaskComponent_Template_button_click_29_listener() {\n        return ctx.saveTask();\n      });\n      i0.ɵɵtext(30, \"Save\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(31, \"div\")(32, \"h2\");\n      i0.ɵɵtext(33, \"Task List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"mat-table\", 10);\n      i0.ɵɵelementContainerStart(35, 11);\n      i0.ɵɵtemplate(36, TaskComponent_mat_header_cell_36_Template, 2, 0, \"mat-header-cell\", 12);\n      i0.ɵɵtemplate(37, TaskComponent_mat_cell_37_Template, 2, 1, \"mat-cell\", 13);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(38, 14);\n      i0.ɵɵtemplate(39, TaskComponent_mat_header_cell_39_Template, 2, 0, \"mat-header-cell\", 12);\n      i0.ɵɵtemplate(40, TaskComponent_mat_cell_40_Template, 2, 1, \"mat-cell\", 13);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(41, 15);\n      i0.ɵɵtemplate(42, TaskComponent_mat_header_cell_42_Template, 2, 0, \"mat-header-cell\", 12);\n      i0.ɵɵtemplate(43, TaskComponent_mat_cell_43_Template, 2, 1, \"mat-cell\", 13);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(44, 16);\n      i0.ɵɵtemplate(45, TaskComponent_mat_header_cell_45_Template, 2, 0, \"mat-header-cell\", 12);\n      i0.ɵɵtemplate(46, TaskComponent_mat_cell_46_Template, 3, 3, \"mat-cell\", 13);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(47, 17);\n      i0.ɵɵtemplate(48, TaskComponent_mat_header_cell_48_Template, 2, 0, \"mat-header-cell\", 12);\n      i0.ɵɵtemplate(49, TaskComponent_mat_cell_49_Template, 2, 1, \"mat-cell\", 13);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(50, 18);\n      i0.ɵɵtemplate(51, TaskComponent_mat_header_cell_51_Template, 2, 0, \"mat-header-cell\", 12);\n      i0.ɵɵtemplate(52, TaskComponent_mat_cell_52_Template, 3, 3, \"mat-cell\", 13);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(53, 19);\n      i0.ɵɵtemplate(54, TaskComponent_mat_header_cell_54_Template, 2, 0, \"mat-header-cell\", 12);\n      i0.ɵɵtemplate(55, TaskComponent_mat_cell_55_Template, 3, 3, \"mat-cell\", 13);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(56, 20);\n      i0.ɵɵtemplate(57, TaskComponent_mat_header_cell_57_Template, 2, 0, \"mat-header-cell\", 12);\n      i0.ɵɵtemplate(58, TaskComponent_mat_cell_58_Template, 7, 0, \"mat-cell\", 13);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(59, TaskComponent_mat_header_row_59_Template, 1, 0, \"mat-header-row\", 21);\n      i0.ɵɵtemplate(60, TaskComponent_mat_row_60_Template, 1, 0, \"mat-row\", 22);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(18);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.taskForm);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"matDatepicker\", _r0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"for\", _r0);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.users);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.projects);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.taskForm.invalid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n    }\n  },\n  dependencies: [i5.NgForOf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName, i6.MatButton, i6.MatIconButton, i7.MatTable, i7.MatHeaderCellDef, i7.MatHeaderRowDef, i7.MatColumnDef, i7.MatCellDef, i7.MatRowDef, i7.MatHeaderCell, i7.MatCell, i7.MatHeaderRow, i7.MatRow, i8.MatInput, i9.MatFormField, i9.MatLabel, i9.MatSuffix, i10.MatDatepicker, i10.MatDatepickerInput, i10.MatDatepickerToggle, i11.MatSelect, i12.MatOption, i13.MatIcon, i5.JsonPipe, i5.DatePipe],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-around;\\n  flex-wrap: wrap;\\n  margin: 2rem 0;\\n}\\n\\n.form-container[_ngcontent-%COMP%] {\\n  width: 45%;\\n}\\n\\ntable[_ngcontent-%COMP%] {\\n  width: 45%;\\n  border-collapse: collapse;\\n}\\n\\ntable[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\n  border: 1px solid #ccc;\\n  padding: 10px;\\n}\\n\\nth[_ngcontent-%COMP%] {\\n  background-color: #f2f2f2;\\n  text-align: left;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  background-color: #00cc44;\\n  color: white;\\n  padding: 5px 10px;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n  transition: background-color 0.3s ease;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n  background-color: #00802b;\\n}\\n\\nform[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  margin-bottom: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFzay90YXNrLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsNkJBQTZCO0VBQzdCLGVBQWU7RUFDZixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsVUFBVTtFQUNWLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLHNCQUFzQjtFQUN0QixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2Ysc0NBQXNDO0FBQ3hDOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBtYXJnaW46IDJyZW0gMDtcbn1cblxuLmZvcm0tY29udGFpbmVyIHtcbiAgd2lkdGg6IDQ1JTtcbn1cblxudGFibGUge1xuICB3aWR0aDogNDUlO1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xufVxuXG50YWJsZSwgdGgsIHRkIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgcGFkZGluZzogMTBweDtcbn1cblxudGgge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG5idXR0b24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBjYzQ0O1xuICBjb2xvcjogd2hpdGU7XG4gIHBhZGRpbmc6IDVweCAxMHB4O1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZTtcbn1cblxuYnV0dG9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwODAyYjtcbn1cblxuZm9ybSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbmxhYmVsIHtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["MatTableDataSource","Validators","i0","TaskComponent","constructor","taskService","userService","projectService","formBuilder","taskForm","group","name","required","description","date","assignedUsers","assignedProjects","dataSource","ngOnInit","getTasks","getUsers","getProjects","users","projects","tasks","addNewTask","isDone","addTask","saveTask","task","value","selectedTask","id","updateTask","reset","length","push","index","findIndex","t","data","deleteTask","editTask","patchValue","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/denisdalipi/Downloads/angular-project/src/app/task/task.component.ts","/Users/denisdalipi/Downloads/angular-project/src/app/task/task.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Task } from \"../model/task\";\nimport { TaskService } from '../task.service';\nimport { UserService } from '../user.service';\nimport { User } from '../model/user';\nimport { Project } from '../model/project';\nimport { ProjectService } from '../project.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {\n    displayedColumns: string[] = [\n      'name',\n      'description',\n      'date',\n      'assignedUsers',\n      'assignedProjects',\n      'actions',\n    ];\n    dataSource: MatTableDataSource<Task>;\n    tasks: Task[] = [];\n    users: User[] = [];\n    projects: Project[] = [];\n\n    selectedTask: Task = {} as Task;\n    taskForm: FormGroup;\n\n\n  constructor(private taskService: TaskService, private userService: UserService, private projectService: ProjectService, private formBuilder: FormBuilder ) {\n    this.taskForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      date: ['', Validators.required],\n      assignedUsers: [''],\n      assignedProjects: [''],\n    });\n    this.dataSource = new MatTableDataSource<Task>([]); // Add this line\n  }\n\n\n  ngOnInit() {\n    this.getTasks();\n    this.getUsers();\n    this.getProjects();\n  }\n\n  getUsers(): void {\n    this.users = this.userService.getUsers();\n  }\n\n  getProjects(): void {\n    this.projects = this.projectService.getProjects();\n  }\n\n  getTasks(): void {\n   this.tasks = this.taskService.getTasks();\n   this.dataSource = new MatTableDataSource(this.tasks);\n }\n\n addNewTask(name: string, description: string, date: Date, assignedUsers: User[], assignedProjects: Project[], isDone: boolean): void {\n   this.taskService.addTask({ name, description, date, assignedUsers, assignedProjects, isDone });\n   this.getTasks();\n }\n\n saveTask(): void {\n   const task = this.taskForm.value;\n   if (this.selectedTask && this.selectedTask.id) {\n     task.id = this.selectedTask.id;\n     this.updateTask(task);\n   } else {\n     this.addNewTask(\n       task.name,\n       task.description,\n       task.date,\n       task.assignedUsers,\n       task.assignedProjects,\n       false\n     );\n   }\n   this.selectedTask = {} as Task;\n   this.taskForm.reset();\n }\n\n\n addTask(name: string, description: string, date: Date, assignedUsers: User[], assignedProjects: Project[]): void {\n   const task: Task = {\n     id: this.tasks.length + 1,\n     name,\n     description,\n     date,\n     assignedUsers,\n     assignedProjects,\n     isDone: false\n   };\n   this.tasks.push(task);\n }\n\nupdateTask(task: Task) {\n  const index = this.tasks.findIndex(t => t.id === task.id);\n\n  if (index !== -1) {\n    this.tasks[index] = task;\n    this.dataSource.data = this.tasks;\n  }\n}\n\n  deleteTask(task: Task): void {\n    this.taskService.deleteTask(task);\n    this.getTasks();\n  }\n\n  editTask(task: Task): void {\n    this.taskForm.patchValue(task);\n  }\n}\n","<div>\n  <h2>Add/Edit Task</h2>\n  <form [formGroup]=\"taskForm\">\n    <mat-form-field>\n      <mat-label>Name</mat-label>\n      <input matInput formControlName=\"name\" placeholder=\"Name\" required />\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Description</mat-label>\n      <input matInput formControlName=\"description\" placeholder=\"Description\" required />\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Date</mat-label>\n      <input\n        matInput\n        formControlName=\"date\"\n        [matDatepicker]=\"picker\"\n        placeholder=\"Date\"\n        required\n      />\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Assign users</mat-label>\n      <mat-select formControlName=\"assignedUsers\" multiple>\n          <mat-option *ngFor=\"let user of users\" [value]=\"user\">{{ user.firstName }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Assign projects</mat-label>\n        <mat-select formControlName=\"assignedProjects\" multiple>\n          <mat-option *ngFor=\"let project of projects\" [value]=\"project\">{{ project.name }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <button mat-raised-button color=\"primary\" (click)=\"saveTask()\" [disabled]=\"taskForm.invalid\">Save</button>\n    </form>\n  </div>\n\n  <div>\n    <h2>Task List</h2>\n    <mat-table [dataSource]=\"dataSource\">\n      <ng-container matColumnDef=\"id\">\n        <mat-header-cell *matHeaderCellDef>ID</mat-header-cell>\n        <mat-cell *matCellDef=\"let task\">{{ task.id }}</mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"name\">\n        <mat-header-cell *matHeaderCellDef>Name</mat-header-cell>\n        <mat-cell *matCellDef=\"let task\">{{ task.name }}</mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"description\">\n        <mat-header-cell *matHeaderCellDef>Description</mat-header-cell>\n        <mat-cell *matCellDef=\"let task\">{{ task.description }}</mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"date\">\n        <mat-header-cell *matHeaderCellDef>Date</mat-header-cell>\n        <mat-cell *matCellDef=\"let task\">{{ task.date | date }}</mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"done\">\n        <mat-header-cell *matHeaderCellDef>Done</mat-header-cell>\n        <mat-cell *matCellDef=\"let task\">{{ task.done }}</mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"users\">\n        <mat-header-cell *matHeaderCellDef>Users</mat-header-cell>\n        <mat-cell *matCellDef=\"let task\">{{ task.assignedUsers | json }}</mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"projects\">\n        <mat-header-cell *matHeaderCellDef>Projects</mat-header-cell>\n        <mat-cell *matCellDef=\"let task\">{{ task.assignedProjects | json }}</mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"actions\">\n        <mat-header-cell *matHeaderCellDef>Actions</mat-header-cell>\n        <mat-cell *matCellDef=\"let task\">\n          <button mat-icon-button color=\"primary\" (click)=\"editTask(task)\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button mat-icon-button color=\"warn\" (click)=\"deleteTask(task)\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </mat-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n    </mat-table>\n  </div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}